{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dist/js/app-flyweb-client.js","dist/js/board.js","dist/js/game/game-base.js","dist/js/game/game-flyweb.js","dist/js/game/game-local-2p.js","dist/js/game/game-local-ai.js","dist/js/game/index.js","dist/js/player/index.js","dist/js/player/player-ai.js","dist/js/player/player-flyweb-master.js","dist/js/player/player-flyweb-slave.js","dist/js/player/player-human.js","dist/js/player/player.js","dist/js/utils.js","node_modules/papaparse/papaparse.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","Game","document","addEventListener","modeDOM","querySelector","classList","add","initGameFlyweb","clientMode","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","__generator","body","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","BoardPiece","utils_1","Papa","Record","winner","moves","Board","canvas","gameRecord","csvData","starter","turnOne","turnTwo","context","getContext","getBoardScale","initConstants","reset","onresize","console","log","start","unparse","csv","fields","data","prototype","map","ROWS","j","COLUMNS","EMPTY","winnerBoardPiece","gameMoveRecord","Utils","clearCanvas","SCALE","window","innerWidth","CANVAS_HEIGHT","CANVAS_WIDTH","PIECE_RADIUS","MASK_X_BEGIN","Math","max","MASK_Y_BEGIN","MESSAGE_X_BEGIN","MESSAGE_WIDTH","MESSAGE_Y_BEGIN","width","height","_this","prevBoardScale","render","applyPlayerAction","player","column","isColumnEverFilled","row","moveR","_a","boardPiece","debug","gameDone","workingCSV","element","createElement","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","getWinner","direction","isWinningSequence","playerPiece","dir","count","countEmpty","k","DRAW","announceWinner","getPlayerColor","PLAYER_1","PLAYER_1_COLOR","PLAYER_2","PLAYER_2_COLOR","animateAction","newRow","fillStyle","currentY","doAnimation","drawCircle","x","strokeStyle","PIECE_STROKE_STYLE","animationFrame","drawMask","MASK_COLOR","board_1","GameBase","players","gamesWon","board","currentPlayerId","isMoveAllowed","isGameWon","move","currentPlayer","actionSuccesful","action","getAction","afterMove","getNextPlayer","extendStatics","__extends","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","create","game_base_1","player_1","GameFlyweb","_super","BASE_URL","location","pathname","substring","lastIndexOf","browser","navigator","isAcceptingPlayer","playerSlave","playerMaster","initClient","initServer","socket","send","JSON","stringify","type","from","handleClientWs","WebSocket","host","onopen","evt","onclose","onerror","close","onmessage","message","parse","showMessage","doAction","fetch","url","response","contentType","blob","headers","get","Content-Type","Cache-Control","Pragma","Expires","respondWith","Response","handleWsServer","accept","accepted","server","publishServer","onfetch","urlParts","params","_b","request","split","URLSearchParams","onwebsocket","PlayerFlywebSlave","PlayerFlywebMaster","game","error","GameLocal2p","initGameLocal2p","PlayerHuman","GameLocalAi","initGameLocalAi","PlayerAi","__export","m","ownBoardPieceValue","getBoardPieceValue","enemyBoardPiece","getStateValue","state","chainValue","tempRight","tempBottom","tempBottomRight","tempTopRight","abs","chain","transformValues","returnValue","depth","isWon","isLost","BIG_POSITIVE_NUMBER","BIG_NEGATIVE_NUMBER","getMove","alpha","beta","stateValue","MAX_DEPTH","minState","maxState","moveQueue","getMockPlayerAction","actionSuccessful","success","nextState","nextValue","choose","min","clone","floor","random","Player","clickPromiseResolver","actionPromiseResolver","handleClick","event","rect","getBoundingClientRect","clientX","left","clientY","top","getColumnFromCoord","messageDOM","remove","messageContentDOM","innerHTML","messageDismissDOM","dismissHandler","removeEventListener","_c","_d","_e","_f","save","beginPath","arc","PI","fill","restore","doubleRadius","tripleRadius","clearRect","isCoordOnColumn","coord","columnXBegin","radius","getRandomColumnNumber","choice","promise","requestAnimationFrame","array","arr","slice","clonedMap","callbacks","running","resize","runCallbacks","setTimeout","forEach","callback","pow","root","factory","AUTO_SCRIPT_PATH","scripts","global","self","IS_WORKER","postMessage","IS_PAPA_WORKER","test","search","LOADED_SYNC","workers","workerIdCounter","_input","_config","dynamicTyping","isFunction","dynamicTypingFunction","worker","WORKERS_SUPPORTED","w","SCRIPT_PATH","workerUrl","indexOf","Worker","mainThreadReceivedMessage","id","newWorker","userStep","userChunk","chunk","userComplete","complete","userError","input","config","workerId","streamer","download","NetworkStreamer","StringStreamer","readable","read","on","ReadableStreamStreamer","File","FileStreamer","stream","_quotes","_writeHeader","_delimiter","_newline","_quoteChar","delimiter","BAD_DELIMITERS","quotes","newline","quoteChar","header","unpackConfig","quoteCharRegex","RegExp","serialize","objectKeys","meta","obj","keys","key","hasHeader","dataKeyedByField","safe","maxCol","col","colIdx","str","toString","replace","needsQuotes","substrings","hasAny","charAt","RECORD_SEP","String","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","jQuery","$","fn","options","queue","each","idx","prop","toUpperCase","attr","toLowerCase","FileReader","files","file","inputElem","instanceConfig","extend","parseNextFile","name","elem","reason","before","returned","fileComplete","userCompleteFunc","results","splice","ChunkStreamer","_handle","_finished","_completed","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","configCopy","copy","chunkSize","parseInt","parseChunk","isFakeChunk","beforeFirstChunk","modifiedChunk","undefined","aggregate","paused","aborted","lastIndex","cursor","finishedIncludingPreview","preview","WORKER_ID","finished","concat","_sendError","xhr","_readChunk","_chunkLoaded","XMLHttpRequest","withCredentials","onload","bindFunction","_chunkError","open","downloadRequestHeaders","headerName","setRequestHeader","end","err","status","readyState","contentRange","getResponseHeader","substr","getFileSize","responseText","errorMessage","errorText","statusText","reader","usingAsyncReader","webkitSlice","mozSlice","FileReaderSync","size","txt","readAsText","encoding","target","remaining","s","parseOnData","streamHasEnded","pause","arguments","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","shift","_streamCleanUp","removeListener","_parser","_delimiterError","FLOAT","_stepCounter","_paused","_aborted","_fields","_results","needsHeaderRow","processResults","abort","addError","skipEmptyLines","trimHeaders","trim","fillHeaderFields","field","parseDynamic","applyHeaderAndDynamicTyping","parseFloat","msg","baseIndex","ignoreLastRow","nAppearsFirst","numWithN","guessLineEndings","delimGuess","bestDelim","bestDelta","fieldCountPrevRow","delimChoices","delim","delta","avgFieldCount","emptyLinesCount","fieldCount","successful","bestDelimiter","guessDelimiter","parserConfig","getCharIndex","comments","fastMode","escapeChar","inputLen","delimLen","newlineLen","commentsLen","stepIsFunction","lastCursor","returnable","rows","pushRow","doStep","quoteSearch","nextDelim","nextNewline","saveRow","index","finish","spacesBetweenQuoteAndDelimiter","extraSpaces","spacesBetweenQuoteAndNewLine","spaceLength","textBetweenClosingQuoteAndIndex","newCursor","stopped","linebreak","truncated","handle","completeWorker","notImplemented","terminate","cpy","func","getElementsByTagName","src","define","amd"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,GCAA,aACAK,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAAAC,EAAAd,EAAA,UACAe,SAAAC,iBAAA,mBAAA,WACA,IAAAC,EAAAF,SAAAG,cAAA,SACAD,GACAA,EAAAE,UAAAC,IAAA,UAEAN,EAAAO,eAAA,CAAAC,YAAA,wCCRA,aACA,IAAAC,EAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,OAAA,IAAAD,IAAAA,EAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAnB,GAAA,IAAAoB,EAAAL,EAAAM,KAAArB,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAA0C,EAAAtB,GAAA,IAAAoB,EAAAL,EAAA,MAAAf,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAAwC,EAAAG,GAAAA,EAAAC,KAAAP,EAAAM,EAAAvB,OAAA,IAAAc,EAAA,SAAAG,GAAAA,EAAAM,EAAAvB,SAAAyB,KAAAN,EAAAG,GACAF,GAAAL,EAAAA,EAAAW,MAAAd,EAAAC,GAAA,KAAAQ,WAGAM,EAAAhB,MAAAA,KAAAgB,aAAA,SAAAf,EAAAgB,GACA,IAAA3C,EAAA4C,EAAA/C,EAAAgD,EAAAC,EAAA,CAAAC,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAnD,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAoD,KAAA,GAAAC,IAAA,IACA,OAAAL,EAAA,CAAAT,KAAAe,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAA,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAA,OAAA7B,OAAAmB,EACA,SAAAM,EAAAvD,GAAA,OAAA,SAAA4D,GAAA,OACA,SAAAC,GACA,GAAAzD,EAAA,MAAA,IAAA0D,UAAA,mCACA,KAAAZ,GAAA,IACA,GAAA9C,EAAA,EAAA4C,IAAA/C,EAAA+C,EAAA,EAAAa,EAAA,GAAA,SAAAA,EAAA,GAAA,QAAA,YAAA5D,EAAAA,EAAAY,KAAAmC,EAAAa,EAAA,KAAAlB,KAAA,OAAA1C,EAEA,OADA+C,EAAA,EAAA/C,IAAA4D,EAAA,CAAA,EAAA5D,EAAAkB,QACA0C,EAAA,IACA,KAAA,EAAA,KAAA,EAAA5D,EAAA4D,EAAA,MACA,KAAA,EAAA,OAAAX,EAAAC,QAAA,CAAAhC,MAAA0C,EAAA,GAAAlB,MAAA,GACA,KAAA,EAAAO,EAAAC,QAAAH,EAAAa,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAAX,EAAAI,IAAAS,MAAAb,EAAAG,KAAAU,MAAA,SACA,QACA,KAAA9D,EAAA,GAAAA,EAAAiD,EAAAG,MAAAvC,QAAAb,EAAAA,EAAAa,OAAA,MAAA,IAAA+C,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAAX,EAAA,EAAA,SACA,GAAA,IAAAW,EAAA,MAAA5D,GAAA4D,EAAA,GAAA5D,EAAA,IAAA4D,EAAA,GAAA5D,EAAA,IAAA,CAAAiD,EAAAC,MAAAU,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAAX,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAA,EAAA4D,EAAA,MACA,GAAA5D,GAAAiD,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAiD,EAAAI,IAAAU,KAAAH,GAAA,MACA5D,EAAA,IAAAiD,EAAAI,IAAAS,MACAb,EAAAG,KAAAU,MAAA,SAEAF,EAAAd,EAAAlC,KAAAkB,EAAAmB,GACA,MAAAnD,GAAA8D,EAAA,CAAA,EAAA9D,GAAAiD,EAAA,EAAA,QAAA5C,EAAAH,EAAA,EACA,GAAA,EAAA4D,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA1C,MAAA0C,EAAA,GAAAA,EAAA,QAAA,EAAAlB,MAAA,GArBAJ,CAAA,CAAAvC,EAAA4D,OAwBA3C,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAEA8C,EACAA,EAHAC,EAAA5D,EAAA,WACA6D,EAAA7D,EAAA,cAEA2D,EAKAA,EAAArD,EAAAqD,aAAArD,EAAAqD,WAAA,KAJAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,KAAA,GAAA,OAEA,IAAAG,EACA,SAAAC,EAAAC,GACAxC,KAAAuC,OAAAA,EACAvC,KAAAwC,MAAAA,GAIA1D,EAAAwD,OAAAA,EACA,IAAAG,EAAA,WACA,SAAAA,EAAAC,GACA1C,KAAA2C,WAAA,GACA3C,KAAA4C,QAAA,GACA5C,KAAA6C,SAAA,EACA7C,KAAA8C,SAAA,EACA9C,KAAA+C,SAAA,EACA/C,KAAA0C,OAAAA,EACA1C,KAAAgD,QAAAN,EAAAO,WAAA,MACAjD,KAAAkD,gBACAlD,KAAAmD,gBACAnD,KAAAoD,QACApD,KAAAqD,WACAC,QAAAC,IAAA,0CAIA,IAHA,IAAAf,EAAA,CACAgB,MAAA,EACAjB,OAAA,GACAlE,EAAA,EAAAA,EAAA,GAAAA,IACAmE,EAAA,SAAAnE,EAAA,IAAA,CAAA,EAAA,GAEA2B,KAAA4C,QAAAV,KAAAM,GAKAc,QAAAC,IAAA,iBAAAlB,EAAAoB,QAJA,CACA,CAAA,QAAA,UACA,CAAA,OAAA,UAGA,IAAAC,EAAArB,EAAAoB,QAAA,CACAE,OAAA,CAAA,WAAA,YACAC,KAAA,CACA,CAAA,MAAA,OACA,CAAA,MAAA,UAIAN,QAAAC,IAAA,mBACAD,QAAAC,IAAAG,GA+OA,OA7OAjB,EAAAoB,UAAAT,MAAA,WACApD,KAAA8D,IAAA,GACA9D,KAAA8C,SAAA,EACA9C,KAAA+C,SAAA,EACA,IAAA,IAAA1E,EAAA,EAAAA,EAAAoE,EAAAsB,KAAA1F,IAAA,CACA2B,KAAA8D,IAAA5B,KAAA,IACA,IAAA,IAAA8B,EAAA,EAAAA,EAAAvB,EAAAwB,QAAAD,IACAhE,KAAA8D,IAAAzF,GAAA6D,KAAAC,EAAA+B,OAGAlE,KAAAmE,iBAAAhC,EAAA+B,MACAlE,KAAAoE,eAAA,GACAhC,EAAAiC,MAAAC,YAAAtE,OAEAyC,EAAAoB,UAAAX,cAAA,WACA,OAAAT,EAAA8B,MAAAC,OAAAC,WAAA,IAAA,GAAA,GAEAhC,EAAAoB,UAAAV,cAAA,WACAV,EAAAiC,cAAA,IAAAjC,EAAA8B,MACA9B,EAAAkC,aAAA,IAAAlC,EAAA8B,MACA9B,EAAAmC,aAAA,GAAAnC,EAAA8B,MACA9B,EAAAoC,aACAC,KAAAC,IAAA,EAAAtC,EAAAkC,cAAA,EAAAlC,EAAAwB,QAAA,GAAAxB,EAAAmC,cAAA,EACAnC,EAAAuC,aACAF,KAAAC,IAAA,EAAAtC,EAAAiC,eAAA,EAAAjC,EAAAsB,KAAA,GAAAtB,EAAAmC,cAAA,EAEAnC,EAAAwC,iBAAAxC,EAAAkC,cADAlC,EAAAyC,cAAA,IAAAzC,EAAA8B,QACA,EACA9B,EAAA0C,gBAAA,GAAA1C,EAAA8B,MACAvE,KAAA0C,OAAA0C,MAAA3C,EAAAkC,aACA3E,KAAA0C,OAAA2C,OAAA5C,EAAAiC,eAEAjC,EAAAoB,UAAAR,SAAA,WACA,IAAAiC,EAAAtF,KACAuF,EAAA9C,EAAA8B,MACAnC,EAAAiC,MAAAhB,WAAAzD,IAAA,WACA0F,EAAApC,gBACAqC,IAAA9C,EAAA8B,QACAgB,EAAA9C,EAAA8B,MACAe,EAAAnC,gBACAf,EAAAiC,MAAAC,YAAAgB,GACAA,EAAAE,aAIA/C,EAAAoB,UAAA4B,kBAAA,SAAAC,EAAAC,GACA,OAAA5F,EAAAC,UAAA,OAAA,EAAA,WACA,IAAA4F,EAAAC,EAAAxH,EAAAyH,EACA,OAAA9E,EAAAhB,KAAA,SAAA+F,GACA,GAAA/F,KAAA8D,IAAA,GAAA6B,KAAAxD,EAAA+B,OACAyB,EAAA,GACAlD,EAAAwB,SAAA0B,EACA,MAAA,CAAA,GAAA,GAIA,IAFAC,GAAA,EAEAvH,EADAwH,EAAA,EACAxH,EAAAoE,EAAAsB,KAAA,EAAA1F,IACA,GAAA2B,KAAA8D,IAAAzF,EAAA,GAAAsH,KAAAxD,EAAA+B,MAAA,CACA0B,GAAA,EACAC,EAAAxH,EACA,MAWA,OARAuH,IACAC,EAAApD,EAAAsB,KAAA,GAEA/D,KAAA8D,IAAA+B,GAAAF,GAAAD,EAAAM,WACAhG,KAAAiG,QACAH,EAAA,CAAAD,EAAAF,GACA3F,KAAAoE,eAAAlC,KAAA4D,GACA9F,KAAAwF,SACA,CAAA,GAAA,QAIA/C,EAAAoB,UAAAoC,MAAA,aAEAxD,EAAAoB,UAAAqC,SAAA,SAAA3D,GACA,IAAA1B,EAAA,IAAAyB,EAAAC,EAAAvC,KAAAoE,gBACA5B,EAAA,GACAA,EAAAgB,MAAAxD,KAAA6C,QACAL,EAAAD,OAAAA,EACA,IAAA,IAAAlE,EAAA,EAAAA,EAAA2B,KAAAoE,eAAApF,OAAAX,IACAmE,EAAA,SAAAnE,EAAA,IAAA2B,KAAAoE,eAAA/F,GAMA,GAJA2B,KAAA4C,QAAAV,KAAAM,GACAc,QAAAC,IAAA,iCAAAhB,GACAe,QAAAC,IAAAvD,KAAAoE,gBACApE,KAAA2C,WAAAT,KAAArB,GACA,KAAAb,KAAA2C,WAAA3D,OAAA,CACA,IAAAmH,EAAA9D,EAAAoB,QAAA,CACAE,OAAA,CAAA,WAAA,YACAC,KAAA,CACA,CAAA,MAAA,OACA,CAAA,MAAA,UAGAN,QAAAC,IAAA,yBACAD,QAAAC,IAAA4C,GACA,IAAAzC,EAAArB,EAAAoB,QAAAzD,KAAA4C,SACAU,QAAAC,IAAA,wBACAD,QAAAC,IAAAG,GACA,IAAA0C,EAAA7G,SAAA8G,cAAA,KACAD,EAAAE,aAAA,OAAA,iCAAAC,mBAAA7C,IACA0C,EAAAE,aAAA,WAAA,mBACAF,EAAAI,MAAAC,QAAA,OACAlH,SAAA0B,KAAAyF,YAAAN,GACAA,EAAAO,QACApH,SAAA0B,KAAA2F,YAAAR,KAIA3D,EAAAoB,UAAAgD,UAAA,WACA,IAAAvB,EAAAtF,KACA,GAAAA,KAAAmE,mBAAAhC,EAAA+B,MACA,OAAAlE,KAAAmE,iBA0BA,IAxBA,IAAA2C,EAAA,CACA,CAAA,GAAA,GACA,CAAA,EAAA,GACA,EAAA,GAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,CAAA,GAAA,GACA,CAAA,EAAA,GACA,CAAA,EAAA,IAEAC,EAAA,SAAA1I,EAAA2F,EAAAgD,EAAAC,EAAAC,GACA,OAAA,GAAAA,KAGA7I,EAAA,GACA2F,EAAA,GACAvB,EAAAsB,MAAA1F,GACAoE,EAAAwB,SAAAD,GACAsB,EAAAxB,IAAAzF,GAAA2F,KAAAgD,IAGAD,EAAA1I,EAAA4I,EAAA,GAAAjD,EAAAiD,EAAA,GAAAD,EAAAC,EAAAC,EAAA,IAEAC,EAAA,EACA9I,EAAA,EAAAA,EAAAoE,EAAAsB,KAAA1F,IACA,IAAA,IAAA2F,EAAA,EAAAA,EAAAvB,EAAAwB,QAAAD,IAAA,CACA,IAAAgD,EAAAhH,KAAA8D,IAAAzF,GAAA2F,GACA,GAAAgD,IAAA7E,EAAA+B,MACA,IAAA,IAAAkD,EAAA,EAAAA,EAAAN,EAAA9H,OAAAoI,IAAA,CAEA,GADAL,EAAA1I,EAAAyI,EAAAM,GAAA,GAAApD,EAAA8C,EAAAM,GAAA,GAAAJ,EAAAF,EAAAM,GAAA,GAEA,OAAApH,KAAAmE,iBAAA6C,OAKAG,IAIA,OAAA,IAAAA,EACAnH,KAAAmE,iBAAAhC,EAAAkF,KAEAlF,EAAA+B,OAEAzB,EAAAoB,UAAAyD,eAAA,WACAtH,KAAA0C,OAAAiE,SAEAlE,EAAAoB,UAAA0D,eAAA,SAAAvB,GACA,OAAAA,GACA,KAAA7D,EAAAqF,SACA,OAAA/E,EAAAgF,eACA,KAAAtF,EAAAuF,SACA,OAAAjF,EAAAkF,eACA,QACA,MAAA,gBAGAlF,EAAAoB,UAAA+D,cAAA,SAAAC,EAAAlC,EAAAK,GACA,OAAAjG,EAAAC,UAAA,OAAA,EAAA,WACA,IACA8H,EAAAC,EAAAC,EADA1C,EAAAtF,KAEA,OAAAgB,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EACAyG,EAAA9H,KAAAuH,eAAAvB,GACA+B,EAAA,EACAC,EAAA,WAAA,OAAAjI,EAAAuF,OAAA,OAAA,EAAA,WACA,OAAAtE,EAAAhB,KAAA,SAAA+F,GAaA,OAZA3D,EAAAiC,MAAAC,YAAAtE,MACAoC,EAAAiC,MAAA4D,WAAAjI,KAAAgD,QAAA,CACAkF,EAAA,EAAAzF,EAAAmC,aAAAe,EACAlD,EAAAoC,aACA,EAAApC,EAAAmC,aACA1D,EAAA6G,EAAAtF,EAAAuC,aAAA,EAAAvC,EAAAmC,aACA5G,EAAAyE,EAAAmC,aACAkD,UAAAA,EACAK,YAAA1F,EAAA2F,qBAEApI,KAAAwF,SACAuC,GAAAtF,EAAAmC,aACA,CAAA,QAGAmB,EAAA1E,MAAA,EACA,KAAA,EACA,OAAA0G,GAAA,EAAAF,EAAApF,EAAAmC,aACA,CAAA,EAAAxC,EAAAiC,MAAAgE,kBADA,CAAA,EAAA,GAEA,KAAA,EAGA,OAFAtC,EAAAzE,OACA0G,IACA,CAAA,EAAA,GACA,KAAA,EAAA,MAAA,CAAA,SAKAvF,EAAAoB,UAAA2B,OAAA,WACApD,EAAAiC,MAAAiE,SAAAtI,MACA,IAAA,IAAAkB,EAAA,EAAAA,EAAAuB,EAAAsB,KAAA7C,IACA,IAAA,IAAAgH,EAAA,EAAAA,EAAAzF,EAAAwB,QAAAiE,IACA9F,EAAAiC,MAAA4D,WAAAjI,KAAAgD,QAAA,CACAkF,EAAA,EAAAzF,EAAAmC,aAAAsD,EACAzF,EAAAoC,aACA,EAAApC,EAAAmC,aACA1D,EAAA,EAAAuB,EAAAmC,aAAA1D,EACAuB,EAAAuC,aACA,EAAAvC,EAAAmC,aACA5G,EAAAyE,EAAAmC,aACAkD,UAAA9H,KAAAuH,eAAAvH,KAAA8D,IAAA5C,GAAAgH,IACAC,YAAA1F,EAAA2F,sBAKA3F,EAAAsB,KAAA,EACAtB,EAAAwB,QAAA,EACAxB,EAAAgF,eAAA,UACAhF,EAAAkF,eAAA,UACAlF,EAAA2F,mBAAA,QACA3F,EAAA8F,WAAA,UACA9F,EAlRA,GAoRA3D,EAAA2D,MAAAA,mDC1UA,aACA,IAAA1C,EAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,OAAA,IAAAD,IAAAA,EAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAnB,GAAA,IAAAoB,EAAAL,EAAAM,KAAArB,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAA0C,EAAAtB,GAAA,IAAAoB,EAAAL,EAAA,MAAAf,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAAwC,EAAAG,GAAAA,EAAAC,KAAAP,EAAAM,EAAAvB,OAAA,IAAAc,EAAA,SAAAG,GAAAA,EAAAM,EAAAvB,SAAAyB,KAAAN,EAAAG,GACAF,GAAAL,EAAAA,EAAAW,MAAAd,EAAAC,GAAA,KAAAQ,WAGAM,EAAAhB,MAAAA,KAAAgB,aAAA,SAAAf,EAAAgB,GACA,IAAA3C,EAAA4C,EAAA/C,EAAAgD,EAAAC,EAAA,CAAAC,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAnD,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAoD,KAAA,GAAAC,IAAA,IACA,OAAAL,EAAA,CAAAT,KAAAe,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAA,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAA,OAAA7B,OAAAmB,EACA,SAAAM,EAAAvD,GAAA,OAAA,SAAA4D,GAAA,OACA,SAAAC,GACA,GAAAzD,EAAA,MAAA,IAAA0D,UAAA,mCACA,KAAAZ,GAAA,IACA,GAAA9C,EAAA,EAAA4C,IAAA/C,EAAA+C,EAAA,EAAAa,EAAA,GAAA,SAAAA,EAAA,GAAA,QAAA,YAAA5D,EAAAA,EAAAY,KAAAmC,EAAAa,EAAA,KAAAlB,KAAA,OAAA1C,EAEA,OADA+C,EAAA,EAAA/C,IAAA4D,EAAA,CAAA,EAAA5D,EAAAkB,QACA0C,EAAA,IACA,KAAA,EAAA,KAAA,EAAA5D,EAAA4D,EAAA,MACA,KAAA,EAAA,OAAAX,EAAAC,QAAA,CAAAhC,MAAA0C,EAAA,GAAAlB,MAAA,GACA,KAAA,EAAAO,EAAAC,QAAAH,EAAAa,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAAX,EAAAI,IAAAS,MAAAb,EAAAG,KAAAU,MAAA,SACA,QACA,KAAA9D,EAAA,GAAAA,EAAAiD,EAAAG,MAAAvC,QAAAb,EAAAA,EAAAa,OAAA,MAAA,IAAA+C,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAAX,EAAA,EAAA,SACA,GAAA,IAAAW,EAAA,MAAA5D,GAAA4D,EAAA,GAAA5D,EAAA,IAAA4D,EAAA,GAAA5D,EAAA,IAAA,CAAAiD,EAAAC,MAAAU,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAAX,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAA,EAAA4D,EAAA,MACA,GAAA5D,GAAAiD,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAiD,EAAAI,IAAAU,KAAAH,GAAA,MACA5D,EAAA,IAAAiD,EAAAI,IAAAS,MACAb,EAAAG,KAAAU,MAAA,SAEAF,EAAAd,EAAAlC,KAAAkB,EAAAmB,GACA,MAAAnD,GAAA8D,EAAA,CAAA,EAAA9D,GAAAiD,EAAA,EAAA,QAAA5C,EAAAH,EAAA,EACA,GAAA,EAAA4D,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA1C,MAAA0C,EAAA,GAAAA,EAAA,QAAA,EAAAlB,MAAA,GArBAJ,CAAA,CAAAvC,EAAA4D,OAwBA3C,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAAAmJ,EAAAhK,EAAA,YACAiK,EAAA,WACA,SAAAA,EAAAC,EAAAhG,GACA1C,KAAA2I,SAAA,GACA3I,KAAA4I,MAAA,IAAAJ,EAAA/F,MAAAC,GACA1C,KAAA0I,QAAAA,EACA1I,KAAA6I,gBAAA,EACA7I,KAAAoD,QA+EA,OA7EAqF,EAAA5E,UAAAT,MAAA,WACApD,KAAA8I,eAAA,EACA9I,KAAA+I,WAAA,EACA/I,KAAA4I,MAAAxF,QACApD,KAAA4I,MAAApD,SACAxF,KAAA4I,MAAA3C,SAEAwC,EAAA5E,UAAAL,MAAA,WACA,OAAAzD,EAAAC,UAAA,OAAA,EAAA,WACA,IAAAuC,EACA,OAAAvB,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EACArB,KAAA8I,eAAA,EACA/C,EAAA1E,MAAA,EACA,KAAA,EACA,OAAArB,KAAA+I,UAAA,CAAA,EAAA,GACA,CAAA,EAAA/I,KAAAgJ,QACA,KAAA,EAGA,OAFAjD,EAAAzE,QACAiB,EAAAvC,KAAA4I,MAAA/B,eACA2B,EAAArG,WAAA+B,OACAZ,QAAAC,IAAA,+BAAAhB,GACAvC,KAAA4I,MAAA1C,SAAA3D,GACAe,QAAAC,IAAAvD,KAAA4I,MAAAjG,YACA3C,KAAA+I,WAAA,EACA/I,KAAA8I,eAAA,EACA9I,KAAA4I,MAAAtB,iBACA,CAAA,EAAA,IAEA,CAAA,EAAA,GACA,KAAA,EAAA,MAAA,CAAA,SAKAmB,EAAA5E,UAAAmF,KAAA,WACA,OAAAjJ,EAAAC,UAAA,OAAA,EAAA,WACA,IAAAiJ,EAAAC,EAAAC,EACA,OAAAnI,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EACA,IAAArB,KAAA8I,cACA,MAAA,CAAA,GAEAG,EAAAjJ,KAAA0I,QAAA1I,KAAA6I,iBACAK,GAAA,EACAnD,EAAA1E,MAAA,EACA,KAAA,EACA,OAAA6H,EAAA,CAAA,EAAA,GACA,CAAA,EAAAD,EAAAG,UAAApJ,KAAA4I,QACA,KAAA,EAGA,OAFAO,EAAApD,EAAAzE,OACAtB,KAAA8I,eAAA,EACA,CAAA,EAAA9I,KAAA4I,MAAAnD,kBAAAwD,EAAAE,IACA,KAAA,EASA,OARAD,EAAAnD,EAAAzE,OACAtB,KAAA8I,eAAA,EACAI,EAIAlJ,KAAAqJ,UAAAF,GAHA7F,QAAAC,IAAA,gCAKA,CAAA,EAAA,GACA,KAAA,EAEA,OADAvD,KAAA6I,gBAAA7I,KAAAsJ,gBACA,CAAA,SAKAb,EAAA5E,UAAAwF,UAAA,SAAAF,KAEAV,EAAA5E,UAAAyF,cAAA,WACA,OAAA,IAAAtJ,KAAA6I,gBAAA,EAAA,GAEAJ,EArFA,GAuFA3J,EAAA2J,SAAAA,sCC7HA,aACA,IACAc,EADAC,EAAAxJ,MAAAA,KAAAwJ,YACAD,EAAApK,OAAAsK,gBACA,CAAAC,UAAA,cAAAC,OAAA,SAAAC,EAAAC,GAAAD,EAAAF,UAAAG,IACA,SAAAD,EAAAC,GAAA,IAAA,IAAAhL,KAAAgL,EAAAA,EAAAC,eAAAjL,KAAA+K,EAAA/K,GAAAgL,EAAAhL,KACA,SAAA+K,EAAAC,GAEA,SAAAE,IAAA/J,KAAAgK,YAAAJ,EADAL,EAAAK,EAAAC,GAEAD,EAAA/F,UAAA,OAAAgG,EAAA1K,OAAA8K,OAAAJ,IAAAE,EAAAlG,UAAAgG,EAAAhG,UAAA,IAAAkG,KAGAhK,EAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,OAAA,IAAAD,IAAAA,EAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAnB,GAAA,IAAAoB,EAAAL,EAAAM,KAAArB,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAA0C,EAAAtB,GAAA,IAAAoB,EAAAL,EAAA,MAAAf,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAAwC,EAAAG,GAAAA,EAAAC,KAAAP,EAAAM,EAAAvB,OAAA,IAAAc,EAAA,SAAAG,GAAAA,EAAAM,EAAAvB,SAAAyB,KAAAN,EAAAG,GACAF,GAAAL,EAAAA,EAAAW,MAAAd,EAAAC,GAAA,KAAAQ,WAGAM,EAAAhB,MAAAA,KAAAgB,aAAA,SAAAf,EAAAgB,GACA,IAAA3C,EAAA4C,EAAA/C,EAAAgD,EAAAC,EAAA,CAAAC,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAnD,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAoD,KAAA,GAAAC,IAAA,IACA,OAAAL,EAAA,CAAAT,KAAAe,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAA,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAA,OAAA7B,OAAAmB,EACA,SAAAM,EAAAvD,GAAA,OAAA,SAAA4D,GAAA,OACA,SAAAC,GACA,GAAAzD,EAAA,MAAA,IAAA0D,UAAA,mCACA,KAAAZ,GAAA,IACA,GAAA9C,EAAA,EAAA4C,IAAA/C,EAAA+C,EAAA,EAAAa,EAAA,GAAA,SAAAA,EAAA,GAAA,QAAA,YAAA5D,EAAAA,EAAAY,KAAAmC,EAAAa,EAAA,KAAAlB,KAAA,OAAA1C,EAEA,OADA+C,EAAA,EAAA/C,IAAA4D,EAAA,CAAA,EAAA5D,EAAAkB,QACA0C,EAAA,IACA,KAAA,EAAA,KAAA,EAAA5D,EAAA4D,EAAA,MACA,KAAA,EAAA,OAAAX,EAAAC,QAAA,CAAAhC,MAAA0C,EAAA,GAAAlB,MAAA,GACA,KAAA,EAAAO,EAAAC,QAAAH,EAAAa,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAAX,EAAAI,IAAAS,MAAAb,EAAAG,KAAAU,MAAA,SACA,QACA,KAAA9D,EAAA,GAAAA,EAAAiD,EAAAG,MAAAvC,QAAAb,EAAAA,EAAAa,OAAA,MAAA,IAAA+C,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAAX,EAAA,EAAA,SACA,GAAA,IAAAW,EAAA,MAAA5D,GAAA4D,EAAA,GAAA5D,EAAA,IAAA4D,EAAA,GAAA5D,EAAA,IAAA,CAAAiD,EAAAC,MAAAU,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAAX,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAA,EAAA4D,EAAA,MACA,GAAA5D,GAAAiD,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAiD,EAAAI,IAAAU,KAAAH,GAAA,MACA5D,EAAA,IAAAiD,EAAAI,IAAAS,MACAb,EAAAG,KAAAU,MAAA,SAEAF,EAAAd,EAAAlC,KAAAkB,EAAAmB,GACA,MAAAnD,GAAA8D,EAAA,CAAA,EAAA9D,GAAAiD,EAAA,EAAA,QAAA5C,EAAAH,EAAA,EACA,GAAA,EAAA4D,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA1C,MAAA0C,EAAA,GAAAA,EAAA,QAAA,EAAAlB,MAAA,GArBAJ,CAAA,CAAAvC,EAAA4D,OAwBA3C,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAAA6K,EAAA1L,EAAA,eACA2L,EAAA3L,EAAA,aACAgK,EAAAhK,EAAA,YACA4D,EAAA5D,EAAA,YACA4L,EAAA,SAAAC,GAEA,SAAAD,EAAA1B,EAAAhG,EAAA5C,QACA,IAAAA,IAAAA,GAAA,GACA,IAAAwF,EAAA+E,EAAAtL,KAAAiB,KAAA0I,EAAAhG,IAAA1C,KAeA,OAdAsF,EAAAgF,SAAA9F,OAAA+F,SAAAC,SAAAC,UAAA,EAAAjG,OAAA+F,SAAAC,SAAAE,YAAA,MACApF,EAAAqF,QAAAC,UACAtF,EAAAuF,mBAAA,GACAvF,EAAAxF,WAAAA,IAEAwF,EAAAwF,YAAApC,EAAA,GACApD,EAAAyF,aAAArC,EAAA,GACApD,EAAA0F,eAGA1F,EAAAyF,aAAArC,EAAA,GACApD,EAAAwF,YAAApC,EAAA,GACApD,EAAA2F,cAEA3F,EAyMA,OA3NAkE,EAAAY,EAAAC,GAoBAD,EAAAvG,UAAAwF,UAAA,SAAAF,IACAnJ,KAAAF,YAAA,IAAAE,KAAA6I,kBACA7I,KAAAF,YAAA,IAAAE,KAAA6I,kBACA7I,KAAA+K,aAAAG,OAAAC,KAAAC,KAAAC,UAAA,CACAC,KAAA,OACA1H,KAAA,CACA+B,OAAAwD,EACAoC,KAAA,IAAAvL,KAAA6I,gBAAA,SAAA,cAKAuB,EAAAvG,UAAAmH,WAAA,WACAhL,KAAAwL,kBAEApB,EAAAvG,UAAA2H,eAAA,WACA,IAAAlG,EAAAtF,KACAkL,EAAA,IAAAO,UAAA,QAAAjH,OAAA+F,SAAAmB,KAAA,YACA1L,KAAA+K,aAAAG,OAAAA,GACAS,OAAA,SAAAC,GACAtI,QAAAC,IAAA,yBAAAqI,IAEAV,EAAAW,QAAA,SAAAD,GACAtI,QAAAC,IAAA,0BAAAqI,IAEAV,EAAAY,QAAA,SAAAF,GACAtI,QAAAC,IAAA,0BAAAqI,GACAV,EAAAa,SAEAb,EAAAc,UAAA,SAAAJ,GAAA,OAAA7L,EAAAuF,OAAA,OAAA,EAAA,WACA,IAAA2G,EACA,OAAAjL,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EAGA,OAFAiC,QAAAC,IAAA,4BAAAqI,IACAK,EAAAb,KAAAc,MAAAN,EAAAhI,OAIA,WAAAqI,EAAAV,KACA,CAAA,GAEA,UAAAU,EAAAX,KAAA,CAAA,EAAA,IACAlJ,EAAAiC,MAAA8H,YAAA,+EACAnM,KAAAwD,QACA,CAAA,EAAA,IARA,CAAA,GASA,KAAA,EACA,MAAA,SAAAyI,EAAAX,KAAA,CAAA,EAAA,IACAtL,KAAA8K,YAAAsB,SAAAH,EAAArI,KAAA+B,QACA,CAAA,EAAA,IACA,KAAA,EACA,MAAA,UAAAsG,EAAAX,KAAA,CAAA,EAAA,IACAtL,KAAAoD,QACA,CAAA,EAAAhB,EAAAiC,MAAAgE,mBACA,KAAA,EACAtC,EAAAzE,OACAtB,KAAAwD,QACAuC,EAAA1E,MAAA,EACA,KAAA,EAAA,MAAA,CAAA,UAKA+I,EAAAvG,UAAAwI,MAAA,SAAAT,EAAAU,GACA,OAAAvM,EAAAC,UAAA,OAAA,EAAA,WACA,IAAAuM,EAAAC,EAAAC,EAAAC,EACA,OAAA1L,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EAAA,MAAA,CAAA,EAAAgL,MAAArM,KAAAsK,SAAAgC,IACA,KAAA,EAGA,OAFAC,EAAAxG,EAAAzE,OACAkL,EAAAD,EAAAG,QAAAC,IAAA,gBACA,CAAA,EAAAJ,EAAAE,QACA,KAAA,EAUA,OATAA,EAAA1G,EAAAzE,OACAoL,EAAA,CACAE,eAAAJ,EACAK,gBAAA,sCACAC,OAAA,WACAC,QAAA,GAEAzJ,QAAAC,IAAA,gBAAA+I,GACAV,EAAAoB,YAAA,IAAA3M,QAAA,SAAArC,GAAA,OAAAA,EAAA,IAAAiP,SAAAR,EAAA,CAAAC,QAAAA,QACA,CAAA,SAKAtC,EAAAvG,UAAAqJ,eAAA,SAAAtB,GACA,IAAAtG,EAAAtF,KACAkL,EAAAU,EAAAuB,UACAnN,KAAA+K,aAAAG,OAAAA,GACAS,OAAA,SAAAC,GACAtI,QAAAC,IAAA,yBAAAqI,EAAAV,GACA5F,EAAAuF,mBACAvF,EAAAuF,mBAAA,EACAK,EAAAC,KAAAC,KAAAC,UAAA,CACAC,KAAA,QACA1H,KAAA,CACAwJ,SAAA9H,EAAAuF,sBAGAzI,EAAAiC,MAAA8H,YAAA,+EACA7G,EAAA9B,SAGA0H,EAAAa,SAGAb,EAAAW,QAAA,SAAAD,GACAtI,QAAAC,IAAA,0BAAAqI,GACAtG,EAAAuF,mBAAA,EACAvF,EAAAlC,SAEA8H,EAAAY,QAAA,SAAAF,GACAtI,QAAAC,IAAA,0BAAAqI,GACAtG,EAAAuF,mBAAA,EACAK,EAAAa,SAEAb,EAAAc,UAAA,SAAAJ,GAAA,OAAA7L,EAAAuF,OAAA,OAAA,EAAA,WACA,IAAA2G,EACA,OAAAjL,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EAGA,OAFAiC,QAAAC,IAAA,4BAAAqI,IACAK,EAAAb,KAAAc,MAAAN,EAAAhI,OAIA,WAAAqI,EAAAV,KACA,CAAA,GAEA,SAAAU,EAAAX,KAAA,CAAA,EAAA,IACAtL,KAAA8K,YAAAsB,SAAAH,EAAArI,KAAA+B,QACA,CAAA,EAAA,IAPA,CAAA,GAQA,KAAA,EACA,MAAA,UAAAsG,EAAAX,KAAA,CAAA,EAAA,IACAtL,KAAAoD,QACA,CAAA,EAAAhB,EAAAiC,MAAAgE,mBACA,KAAA,EACAtC,EAAAzE,OACAtB,KAAAwD,QACAuC,EAAA1E,MAAA,EACA,KAAA,EAAA,MAAA,CAAA,UAKA+I,EAAAvG,UAAAoH,WAAA,WACA,OAAAlL,EAAAC,UAAA,OAAA,EAAA,WACA,IACAqN,EADA/H,EAAAtF,KAEA,OAAAgB,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EACA,MAAA,kBAAArB,KAAA2K,QAIA,CAAA,EAAA3K,KAAA2K,QAAA2C,cAAA,uBAHAlL,EAAAiC,MAAA8H,YAAA,sJACA,CAAA,GAAA,IAGA,KAAA,EAkCA,OAjCAkB,EAAAtH,EAAAzE,QACAiM,QAAA,SAAA3B,GAAA,OAAA7L,EAAAuF,OAAA,OAAA,EAAA,WACA,IAAAkI,EAAAlB,EAAAmB,EACA,OAAAzM,EAAAhB,KAAA,SAAA0N,GACA,OAAAA,EAAArM,OACA,KAAA,EAMA,OALAmM,EAAA5B,EAAA+B,QAAArB,IAAAsB,MAAA,KACAtB,EAAAkB,EAAA,GACAC,EAAA,IAAAI,gBAAAL,EAAA,IACAlK,QAAAC,IAAA,yBAAA+I,EAAAmB,GACAnB,GAEA,IAAA,eAAA,MAAA,CAAA,EAAA,GAEA,MAAA,CAAA,EAAA,GACA,KAAA,EAAA,MAAA,CAAA,EAAAtM,KAAAqM,MAAAT,EAAA,+BACA,KAAA,EAEA,OADA8B,EAAApM,OACA,CAAA,EAAA,GACA,KAAA,EAAA,MAAA,CAAA,EAAAtB,KAAAqM,MAAAT,EAAAU,IACA,KAAA,EACAoB,EAAApM,OACAoM,EAAArM,MAAA,EACA,KAAA,EAAA,MAAA,CAAA,SAIAgM,EAAAS,YAAA,SAAAlC,GAEA,YADAA,EAAA+B,QAAArB,KAEAhH,EAAA4H,eAAAtB,IAGA,CAAA,SAKAxB,EA5NA,CA6NAF,EAAAzB,UAgDA3J,EAAAe,eA/CA,SAAAkG,GACA,IAAAT,EAAAtF,KACA0N,EAAA3H,EAAAjG,WAAAA,OAAA,IAAA4N,GAAAA,EACAhL,EAAAnD,SAAAG,cAAA,UACA,GAAAgD,EAAA,CAIA,IAAAgG,EAAA,GAEAA,EADA5I,EACA,CACA,IAAAqK,EAAA4D,kBAAAvF,EAAArG,WAAAqF,SAAA9E,GACA,IAAAyH,EAAA6D,mBAAAxF,EAAArG,WAAAuF,SAAAhF,IAIA,CACA,IAAAyH,EAAA6D,mBAAAxF,EAAArG,WAAAqF,SAAA9E,GACA,IAAAyH,EAAA4D,kBAAAvF,EAAArG,WAAAuF,SAAAhF,IAGA,IAAAuL,EAAA,IAAA7D,EAAA1B,EAAAhG,EAAA5C,GACAsC,EAAAiC,MAAA8H,YAAA,uEACAzJ,EAAAlD,iBAAA,QAAA,WAAA,OAAAO,EAAAuF,OAAA,OAAA,EAAA,WACA,OAAAtE,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EACA,OAAA4M,EAAAlF,WACAkF,EAAA7K,QACA6K,EAAAlD,cAAAkD,EAAAlD,aAAAG,QACA+C,EAAAlD,aAAAG,OAAAC,KAAAC,KAAAC,UAAA,CACAC,KAAA,QACA1H,KAAA,CACAR,OAAA,MAIA,CAAA,EAAAhB,EAAAiC,MAAAgE,mBAVA,CAAA,EAAA,GAWA,KAAA,EACAtC,EAAAzE,OACA2M,EAAAzK,QACAuC,EAAA1E,MAAA,EACA,KAAA,EAAA,MAAA,CAAA,eArCAiC,QAAA4K,MAAA,uGCtRA,aACA,IACA3E,EADAC,EAAAxJ,MAAAA,KAAAwJ,YACAD,EAAApK,OAAAsK,gBACA,CAAAC,UAAA,cAAAC,OAAA,SAAAC,EAAAC,GAAAD,EAAAF,UAAAG,IACA,SAAAD,EAAAC,GAAA,IAAA,IAAAhL,KAAAgL,EAAAA,EAAAC,eAAAjL,KAAA+K,EAAA/K,GAAAgL,EAAAhL,KACA,SAAA+K,EAAAC,GAEA,SAAAE,IAAA/J,KAAAgK,YAAAJ,EADAL,EAAAK,EAAAC,GAEAD,EAAA/F,UAAA,OAAAgG,EAAA1K,OAAA8K,OAAAJ,IAAAE,EAAAlG,UAAAgG,EAAAhG,UAAA,IAAAkG,KAGAhK,EAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,OAAA,IAAAD,IAAAA,EAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAnB,GAAA,IAAAoB,EAAAL,EAAAM,KAAArB,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAA0C,EAAAtB,GAAA,IAAAoB,EAAAL,EAAA,MAAAf,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAAwC,EAAAG,GAAAA,EAAAC,KAAAP,EAAAM,EAAAvB,OAAA,IAAAc,EAAA,SAAAG,GAAAA,EAAAM,EAAAvB,SAAAyB,KAAAN,EAAAG,GACAF,GAAAL,EAAAA,EAAAW,MAAAd,EAAAC,GAAA,KAAAQ,WAGAM,EAAAhB,MAAAA,KAAAgB,aAAA,SAAAf,EAAAgB,GACA,IAAA3C,EAAA4C,EAAA/C,EAAAgD,EAAAC,EAAA,CAAAC,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAnD,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAoD,KAAA,GAAAC,IAAA,IACA,OAAAL,EAAA,CAAAT,KAAAe,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAA,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAA,OAAA7B,OAAAmB,EACA,SAAAM,EAAAvD,GAAA,OAAA,SAAA4D,GAAA,OACA,SAAAC,GACA,GAAAzD,EAAA,MAAA,IAAA0D,UAAA,mCACA,KAAAZ,GAAA,IACA,GAAA9C,EAAA,EAAA4C,IAAA/C,EAAA+C,EAAA,EAAAa,EAAA,GAAA,SAAAA,EAAA,GAAA,QAAA,YAAA5D,EAAAA,EAAAY,KAAAmC,EAAAa,EAAA,KAAAlB,KAAA,OAAA1C,EAEA,OADA+C,EAAA,EAAA/C,IAAA4D,EAAA,CAAA,EAAA5D,EAAAkB,QACA0C,EAAA,IACA,KAAA,EAAA,KAAA,EAAA5D,EAAA4D,EAAA,MACA,KAAA,EAAA,OAAAX,EAAAC,QAAA,CAAAhC,MAAA0C,EAAA,GAAAlB,MAAA,GACA,KAAA,EAAAO,EAAAC,QAAAH,EAAAa,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAAX,EAAAI,IAAAS,MAAAb,EAAAG,KAAAU,MAAA,SACA,QACA,KAAA9D,EAAA,GAAAA,EAAAiD,EAAAG,MAAAvC,QAAAb,EAAAA,EAAAa,OAAA,MAAA,IAAA+C,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAAX,EAAA,EAAA,SACA,GAAA,IAAAW,EAAA,MAAA5D,GAAA4D,EAAA,GAAA5D,EAAA,IAAA4D,EAAA,GAAA5D,EAAA,IAAA,CAAAiD,EAAAC,MAAAU,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAAX,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAA,EAAA4D,EAAA,MACA,GAAA5D,GAAAiD,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAiD,EAAAI,IAAAU,KAAAH,GAAA,MACA5D,EAAA,IAAAiD,EAAAI,IAAAS,MACAb,EAAAG,KAAAU,MAAA,SAEAF,EAAAd,EAAAlC,KAAAkB,EAAAmB,GACA,MAAAnD,GAAA8D,EAAA,CAAA,EAAA9D,GAAAiD,EAAA,EAAA,QAAA5C,EAAAH,EAAA,EACA,GAAA,EAAA4D,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA1C,MAAA0C,EAAA,GAAAA,EAAA,QAAA,EAAAlB,MAAA,GArBAJ,CAAA,CAAAvC,EAAA4D,OAwBA3C,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAAAmJ,EAAAhK,EAAA,YACA0L,EAAA1L,EAAA,eACA2L,EAAA3L,EAAA,aACA4D,EAAA5D,EAAA,YACA2P,EAAA,SAAA9D,GAEA,SAAA8D,EAAAzF,EAAAhG,GACA,OAAA2H,EAAAtL,KAAAiB,KAAA0I,EAAAhG,IAAA1C,KAEA,OAJAwJ,EAAA2E,EAAA9D,GAIA8D,EALA,CAMAjE,EAAAzB,UA6BA3J,EAAAsP,gBA5BA,WACA,IAAA9I,EAAAtF,KACA0C,EAAAnD,SAAAG,cAAA,UACA,GAAAgD,EAAA,CAIA,IAAAuL,EAAA,IAAAE,EAAA,CACA,IAAAhE,EAAAkE,YAAA7F,EAAArG,WAAAqF,SAAA9E,GACA,IAAAyH,EAAAkE,YAAA7F,EAAArG,WAAAuF,SAAAhF,IACAA,GACAuL,EAAAzK,QACAd,EAAAlD,iBAAA,QAAA,WAAA,OAAAO,EAAAuF,OAAA,OAAA,EAAA,WACA,OAAAtE,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EACA,OAAA4M,EAAAlF,WACAkF,EAAA7K,QACA,CAAA,EAAAhB,EAAAiC,MAAAgE,mBAFA,CAAA,EAAA,GAGA,KAAA,EACAtC,EAAAzE,OACA2M,EAAAzK,QACAuC,EAAA1E,MAAA,EACA,KAAA,EAAA,MAAA,CAAA,eAnBAiC,QAAA4K,MAAA,uGC9DA,aACA,IACA3E,EADAC,EAAAxJ,MAAAA,KAAAwJ,YACAD,EAAApK,OAAAsK,gBACA,CAAAC,UAAA,cAAAC,OAAA,SAAAC,EAAAC,GAAAD,EAAAF,UAAAG,IACA,SAAAD,EAAAC,GAAA,IAAA,IAAAhL,KAAAgL,EAAAA,EAAAC,eAAAjL,KAAA+K,EAAA/K,GAAAgL,EAAAhL,KACA,SAAA+K,EAAAC,GAEA,SAAAE,IAAA/J,KAAAgK,YAAAJ,EADAL,EAAAK,EAAAC,GAEAD,EAAA/F,UAAA,OAAAgG,EAAA1K,OAAA8K,OAAAJ,IAAAE,EAAAlG,UAAAgG,EAAAhG,UAAA,IAAAkG,KAGAhK,EAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,OAAA,IAAAD,IAAAA,EAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAnB,GAAA,IAAAoB,EAAAL,EAAAM,KAAArB,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAA0C,EAAAtB,GAAA,IAAAoB,EAAAL,EAAA,MAAAf,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAAwC,EAAAG,GAAAA,EAAAC,KAAAP,EAAAM,EAAAvB,OAAA,IAAAc,EAAA,SAAAG,GAAAA,EAAAM,EAAAvB,SAAAyB,KAAAN,EAAAG,GACAF,GAAAL,EAAAA,EAAAW,MAAAd,EAAAC,GAAA,KAAAQ,WAGAM,EAAAhB,MAAAA,KAAAgB,aAAA,SAAAf,EAAAgB,GACA,IAAA3C,EAAA4C,EAAA/C,EAAAgD,EAAAC,EAAA,CAAAC,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAnD,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAoD,KAAA,GAAAC,IAAA,IACA,OAAAL,EAAA,CAAAT,KAAAe,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAA,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAA,OAAA7B,OAAAmB,EACA,SAAAM,EAAAvD,GAAA,OAAA,SAAA4D,GAAA,OACA,SAAAC,GACA,GAAAzD,EAAA,MAAA,IAAA0D,UAAA,mCACA,KAAAZ,GAAA,IACA,GAAA9C,EAAA,EAAA4C,IAAA/C,EAAA+C,EAAA,EAAAa,EAAA,GAAA,SAAAA,EAAA,GAAA,QAAA,YAAA5D,EAAAA,EAAAY,KAAAmC,EAAAa,EAAA,KAAAlB,KAAA,OAAA1C,EAEA,OADA+C,EAAA,EAAA/C,IAAA4D,EAAA,CAAA,EAAA5D,EAAAkB,QACA0C,EAAA,IACA,KAAA,EAAA,KAAA,EAAA5D,EAAA4D,EAAA,MACA,KAAA,EAAA,OAAAX,EAAAC,QAAA,CAAAhC,MAAA0C,EAAA,GAAAlB,MAAA,GACA,KAAA,EAAAO,EAAAC,QAAAH,EAAAa,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAAX,EAAAI,IAAAS,MAAAb,EAAAG,KAAAU,MAAA,SACA,QACA,KAAA9D,EAAA,GAAAA,EAAAiD,EAAAG,MAAAvC,QAAAb,EAAAA,EAAAa,OAAA,MAAA,IAAA+C,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAAX,EAAA,EAAA,SACA,GAAA,IAAAW,EAAA,MAAA5D,GAAA4D,EAAA,GAAA5D,EAAA,IAAA4D,EAAA,GAAA5D,EAAA,IAAA,CAAAiD,EAAAC,MAAAU,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAAX,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAA,EAAA4D,EAAA,MACA,GAAA5D,GAAAiD,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAiD,EAAAI,IAAAU,KAAAH,GAAA,MACA5D,EAAA,IAAAiD,EAAAI,IAAAS,MACAb,EAAAG,KAAAU,MAAA,SAEAF,EAAAd,EAAAlC,KAAAkB,EAAAmB,GACA,MAAAnD,GAAA8D,EAAA,CAAA,EAAA9D,GAAAiD,EAAA,EAAA,QAAA5C,EAAAH,EAAA,EACA,GAAA,EAAA4D,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA1C,MAAA0C,EAAA,GAAAA,EAAA,QAAA,EAAAlB,MAAA,GArBAJ,CAAA,CAAAvC,EAAA4D,OAwBA3C,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAAAmJ,EAAAhK,EAAA,YACA0L,EAAA1L,EAAA,eACA2L,EAAA3L,EAAA,aACA4D,EAAA5D,EAAA,YACA8P,EAAA,SAAAjE,GAEA,SAAAiE,EAAA5F,EAAAhG,GACA,OAAA2H,EAAAtL,KAAAiB,KAAA0I,EAAAhG,IAAA1C,KAEA,OAJAwJ,EAAA8E,EAAAjE,GAIAiE,EALA,CAMApE,EAAAzB,UA8BA3J,EAAAyP,gBA7BA,WACA,IAAAjJ,EAAAtF,KACA0C,EAAAnD,SAAAG,cAAA,UACA,GAAAgD,EAAA,CAIA,IAAAuL,EAAA,IAAAK,EAAA,CACA,IAAAnE,EAAAqE,SAAAhG,EAAArG,WAAAqF,SAAA9E,GACA,IAAAyH,EAAAqE,SAAAhG,EAAArG,WAAAuF,SAAAhF,IACAA,GACAuL,EAAAzK,QACAd,EAAAlD,iBAAA,QAAA,WAAA,OAAAO,EAAAuF,OAAA,OAAA,EAAA,WACA,OAAAtE,EAAAhB,KAAA,SAAA+F,GACA,OAAAA,EAAA1E,OACA,KAAA,EACA,OAAA4M,EAAAlF,WACAzF,QAAAC,IAAA,yBACA0K,EAAA7K,QACA,CAAA,EAAAhB,EAAAiC,MAAAgE,mBAHA,CAAA,EAAA,GAIA,KAAA,EACAtC,EAAAzE,OACA2M,EAAAzK,QACAuC,EAAA1E,MAAA,EACA,KAAA,EAAA,MAAA,CAAA,eApBAiC,QAAA4K,MAAA,uGC9DA,aACA,SAAAO,EAAAC,GACA,IAAA,IAAA7P,KAAA6P,EAAA5P,EAAAgL,eAAAjL,KAAAC,EAAAD,GAAA6P,EAAA7P,IAEAM,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACAoP,EAAAjQ,EAAA,kBACAiQ,EAAAjQ,EAAA,oBACAiQ,EAAAjQ,EAAA,qGCPA,aACA,SAAAiQ,EAAAC,GACA,IAAA,IAAA7P,KAAA6P,EAAA5P,EAAAgL,eAAAjL,KAAAC,EAAAD,GAAA6P,EAAA7P,IAEAM,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACAoP,EAAAjQ,EAAA,aACAiQ,EAAAjQ,EAAA,gBACAiQ,EAAAjQ,EAAA,mBACAiQ,EAAAjQ,EAAA,2BACAiQ,EAAAjQ,EAAA,0JCTA,aACA,IACA+K,EADAC,EAAAxJ,MAAAA,KAAAwJ,YACAD,EAAApK,OAAAsK,gBACA,CAAAC,UAAA,cAAAC,OAAA,SAAAC,EAAAC,GAAAD,EAAAF,UAAAG,IACA,SAAAD,EAAAC,GAAA,IAAA,IAAAhL,KAAAgL,EAAAA,EAAAC,eAAAjL,KAAA+K,EAAA/K,GAAAgL,EAAAhL,KACA,SAAA+K,EAAAC,GAEA,SAAAE,IAAA/J,KAAAgK,YAAAJ,EADAL,EAAAK,EAAAC,GAEAD,EAAA/F,UAAA,OAAAgG,EAAA1K,OAAA8K,OAAAJ,IAAAE,EAAAlG,UAAAgG,EAAAhG,UAAA,IAAAkG,KAGAhK,EAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,OAAA,IAAAD,IAAAA,EAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAnB,GAAA,IAAAoB,EAAAL,EAAAM,KAAArB,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAA0C,EAAAtB,GAAA,IAAAoB,EAAAL,EAAA,MAAAf,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAAwC,EAAAG,GAAAA,EAAAC,KAAAP,EAAAM,EAAAvB,OAAA,IAAAc,EAAA,SAAAG,GAAAA,EAAAM,EAAAvB,SAAAyB,KAAAN,EAAAG,GACAF,GAAAL,EAAAA,EAAAW,MAAAd,EAAAC,GAAA,KAAAQ,WAGAM,EAAAhB,MAAAA,KAAAgB,aAAA,SAAAf,EAAAgB,GACA,IAAA3C,EAAA4C,EAAA/C,EAAAgD,EAAAC,EAAA,CAAAC,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAnD,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAoD,KAAA,GAAAC,IAAA,IACA,OAAAL,EAAA,CAAAT,KAAAe,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAA,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAA,OAAA7B,OAAAmB,EACA,SAAAM,EAAAvD,GAAA,OAAA,SAAA4D,GAAA,OACA,SAAAC,GACA,GAAAzD,EAAA,MAAA,IAAA0D,UAAA,mCACA,KAAAZ,GAAA,IACA,GAAA9C,EAAA,EAAA4C,IAAA/C,EAAA+C,EAAA,EAAAa,EAAA,GAAA,SAAAA,EAAA,GAAA,QAAA,YAAA5D,EAAAA,EAAAY,KAAAmC,EAAAa,EAAA,KAAAlB,KAAA,OAAA1C,EAEA,OADA+C,EAAA,EAAA/C,IAAA4D,EAAA,CAAA,EAAA5D,EAAAkB,QACA0C,EAAA,IACA,KAAA,EAAA,KAAA,EAAA5D,EAAA4D,EAAA,MACA,KAAA,EAAA,OAAAX,EAAAC,QAAA,CAAAhC,MAAA0C,EAAA,GAAAlB,MAAA,GACA,KAAA,EAAAO,EAAAC,QAAAH,EAAAa,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAAX,EAAAI,IAAAS,MAAAb,EAAAG,KAAAU,MAAA,SACA,QACA,KAAA9D,EAAA,GAAAA,EAAAiD,EAAAG,MAAAvC,QAAAb,EAAAA,EAAAa,OAAA,MAAA,IAAA+C,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAAX,EAAA,EAAA,SACA,GAAA,IAAAW,EAAA,MAAA5D,GAAA4D,EAAA,GAAA5D,EAAA,IAAA4D,EAAA,GAAA5D,EAAA,IAAA,CAAAiD,EAAAC,MAAAU,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAAX,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAA,EAAA4D,EAAA,MACA,GAAA5D,GAAAiD,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAiD,EAAAI,IAAAU,KAAAH,GAAA,MACA5D,EAAA,IAAAiD,EAAAI,IAAAS,MACAb,EAAAG,KAAAU,MAAA,SAEAF,EAAAd,EAAAlC,KAAAkB,EAAAmB,GACA,MAAAnD,GAAA8D,EAAA,CAAA,EAAA9D,GAAAiD,EAAA,EAAA,QAAA5C,EAAAH,EAAA,EACA,GAAA,EAAA4D,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA1C,MAAA0C,EAAA,GAAAA,EAAA,QAAA,EAAAlB,MAAA,GArBAJ,CAAA,CAAAvC,EAAA4D,OAwBA3C,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAAA8K,EAAA3L,EAAA,YACAgK,EAAAhK,EAAA,YACA4D,EAAA5D,EAAA,YACAgQ,EAAA,SAAAnE,GAEA,SAAAmE,EAAAxI,EAAAtD,GACA,IAAA4C,EAAA+E,EAAAtL,KAAAiB,KAAAgG,EAAAtD,IAAA1C,KAMA,OALAsF,EAAAqJ,mBAAArJ,EAAAsJ,mBAAA5I,GACAV,EAAAuJ,gBACA7I,IAAAwC,EAAArG,WAAAqF,SACAgB,EAAArG,WAAAuF,SACAc,EAAArG,WAAAqF,SACAlC,EAiKA,OAzKAkE,EAAAgF,EAAAnE,GAUAmE,EAAA3K,UAAA+K,mBAAA,SAAA5I,GACA,OAAAA,IAAAwC,EAAArG,WAAA+B,MACA,EACA8B,IAAAhG,KAAAgG,WAAA,GAAA,GAEAwI,EAAA3K,UAAAiL,cAAA,SAAAC,GAGA,IAFA,IAAA5K,EAAAqE,EAAArG,WAAA+B,MACA8K,EAAA,EACA3Q,EAAA,EAAAA,EAAAmK,EAAA/F,MAAAsB,KAAA1F,IACA,IAAA,IAAA2F,EAAA,EAAAA,EAAAwE,EAAA/F,MAAAwB,QAAAD,IAAA,CAEA,IADA,IAAAiL,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAhI,EAAA,EAAAA,GAAA,EAAAA,IACApD,EAAAoD,EAAAoB,EAAA/F,MAAAwB,UACAgL,GAAAjP,KAAA4O,mBAAAG,EAAA1Q,GAAA2F,EAAAoD,KAEA/I,EAAA+I,EAAAoB,EAAA/F,MAAAsB,OACAmL,GAAAlP,KAAA4O,mBAAAG,EAAA1Q,EAAA+I,GAAApD,KAEA3F,EAAA+I,EAAAoB,EAAA/F,MAAAsB,MAAAC,EAAAoD,EAAAoB,EAAA/F,MAAAwB,UACAkL,GAAAnP,KAAA4O,mBAAAG,EAAA1Q,EAAA+I,GAAApD,EAAAoD,KAEA,GAAA/I,EAAA+I,GAAApD,EAAAoD,EAAA,IACAgI,GAAApP,KAAA4O,mBAAAG,EAAA1Q,EAAA+I,GAAApD,EAAAoD,KAGA4H,GAAAC,EAAAA,EAAAA,EACAD,GAAAE,EAAAA,EAAAA,EACAF,GAAAG,EAAAA,EAAAA,EACAH,GAAAI,EAAAA,EAAAA,EACA,IAAAtK,KAAAuK,IAAAJ,GACA9K,EACA,EAAA8K,EAAAjP,KAAAgG,WAAAhG,KAAA6O,gBAEA,IAAA/J,KAAAuK,IAAAH,GACA/K,EACA,EAAA+K,EAAAlP,KAAAgG,WAAAhG,KAAA6O,gBAEA,IAAA/J,KAAAuK,IAAAF,GACAhL,EACA,EAAAgL,EAAAnP,KAAAgG,WAAAhG,KAAA6O,gBAEA,IAAA/J,KAAAuK,IAAAD,KACAjL,EACA,EAAAiL,EAAApP,KAAAgG,WAAAhG,KAAA6O,iBAIA,MAAA,CACA1K,iBAAAA,EACAmL,MAAAN,IAGAR,EAAA3K,UAAA0L,gBAAA,SAAAC,EAAArL,EAAAsL,GACA,IAAAC,EAAAvL,IAAAnE,KAAAgG,WACA2J,EAAAxL,IAAAnE,KAAA6O,gBAQA,OAPAa,EACAF,EAAApN,EAAAiC,MAAAuL,oBAAA,IAEAD,IACAH,EAAApN,EAAAiC,MAAAwL,oBAAA,KAEAL,GAAAC,EAAAA,GAGAjB,EAAA3K,UAAAiM,QAAA,SAAAf,EAAAU,EAAAM,EAAAC,GACA,IAAAC,EAAAjQ,KAAA8O,cAAAC,GACAW,EAAAO,EAAA9L,mBAAAnE,KAAAgG,WACA2J,EAAAM,EAAA9L,mBAAAnE,KAAA6O,gBACA,OAAAL,EAAA0B,WAAAT,GAAAC,GAAAC,EACA,CACAtQ,MAAAW,KAAAuP,gBAAAU,EAAAX,MAAAtP,KAAA2O,mBAAAsB,EAAA9L,iBAAAsL,GACAzG,MAAA,GAGAyG,EAAA,GAAA,EACAzP,KAAAmQ,SAAApB,EAAAU,EAAA,EAAAM,EAAAC,GACAhQ,KAAAoQ,SAAArB,EAAAU,EAAA,EAAAM,EAAAC,IAEAxB,EAAA3K,UAAAuM,SAAA,SAAArB,EAAAU,EAAAM,EAAAC,GAGA,IAFA,IAAA3Q,EAAA+C,EAAAiC,MAAAwL,oBACAQ,EAAA,GACA1K,EAAA,EAAAA,EAAA6C,EAAA/F,MAAAwB,QAAA0B,IAAA,CACA,IAAAI,EAAA3D,EAAAiC,MAAAiM,oBAAAvB,EAAA/O,KAAAgG,WAAAL,GAAA4K,EAAAxK,EAAAyK,QAAAC,EAAA1K,EAAAjC,IACA,GAAAyM,EAAA,CACA,IAAA7C,EAAA1N,KAAA8P,QAAAW,EAAAhB,EAAAM,EAAAC,GAAAU,EAAAhD,EAAArO,MAAAqO,EAAA1E,KAQA,GAPA3J,EAAAqR,GACArR,EAAAqR,EACAL,EAAA,CAAA1K,IAEA+K,IAAArR,GACAgR,EAAAnO,KAAAyD,GAEAqK,EAAA3Q,EACA,MAAA,CACAA,MAAAA,EACA2J,KAAA5G,EAAAiC,MAAAsM,OAAAN,IAGAN,EAAAjL,KAAAC,IAAAgL,EAAA1Q,IAGA,MAAA,CACAA,MAAAA,EACA2J,KAAA5G,EAAAiC,MAAAsM,OAAAN,KAGA7B,EAAA3K,UAAAsM,SAAA,SAAApB,EAAAU,EAAAM,EAAAC,GAGA,IAFA,IAAA3Q,EAAA+C,EAAAiC,MAAAuL,oBACAS,EAAA,GACA1K,EAAA,EAAAA,EAAA6C,EAAA/F,MAAAwB,QAAA0B,IAAA,CACA,IAAAI,EAAA3D,EAAAiC,MAAAiM,oBAAAvB,EAAA/O,KAAA6O,gBAAAlJ,GAAA4K,EAAAxK,EAAAyK,QAAAC,EAAA1K,EAAAjC,IACA,GAAAyM,EAAA,CACA,IAAA7C,EAAA1N,KAAA8P,QAAAW,EAAAhB,EAAAM,EAAAC,GAAAU,EAAAhD,EAAArO,MAAAqO,EAAA1E,KAQA,GAPA0H,EAAArR,GACAA,EAAAqR,EACAL,EAAA,CAAA1K,IAEA+K,IAAArR,GACAgR,EAAAnO,KAAAyD,GAEAtG,EAAA0Q,EACA,MAAA,CACA1Q,MAAAA,EACA2J,KAAA5G,EAAAiC,MAAAsM,OAAAN,IAGAL,EAAAlL,KAAA8L,IAAAZ,EAAA3Q,IAGA,MAAA,CACAA,MAAAA,EACA2J,KAAA5G,EAAAiC,MAAAsM,OAAAN,KAGA7B,EAAA3K,UAAAuF,UAAA,SAAAR,GACA,OAAA7I,EAAAC,UAAA,OAAA,EAAA,WACA,IAAA+O,EAAA5F,EACA,OAAAnI,EAAAhB,KAAA,SAAA+F,GASA,OARAgJ,EAAA3M,EAAAiC,MAAAwM,MAAAjI,EAAA9E,KACAqF,EAAAnJ,KAAAoQ,SAAArB,EAAA,EAAA3M,EAAAiC,MAAAwL,oBAAAzN,EAAAiC,MAAAuL,qBACAtM,QAAAC,IAAA,MAAAvD,KACAgG,WAAA,yBAAAmD,EAAAH,KAAA,SAAAJ,EAAA7F,QAAA,aAAAoG,EAAA9J,OACAuJ,EAAA9F,UACAQ,QAAAC,IAAA,qBAAAvD,KAAAgG,YACA4C,EAAA/F,QAAA7C,KAAAgG,YAEA4C,EAAA7F,SACA6F,EAAA7F,QAAA6F,EAAA9F,QACA8F,EAAA9F,SAAA,EACAQ,QAAAC,IAAA,wBACA,CAAA,EAAAuB,KAAAgM,MAAA,EAAAhM,KAAAiM,YAGA,CAAA,EAAA5H,EAAAH,WAKAwF,EAAA0B,UAAA,EACA1B,EA1KA,CA2KArE,EAAA6G,QACAlS,EAAA0P,SAAAA,mEC9NA,aACA,IACAjF,EADAC,EAAAxJ,MAAAA,KAAAwJ,YACAD,EAAApK,OAAAsK,gBACA,CAAAC,UAAA,cAAAC,OAAA,SAAAC,EAAAC,GAAAD,EAAAF,UAAAG,IACA,SAAAD,EAAAC,GAAA,IAAA,IAAAhL,KAAAgL,EAAAA,EAAAC,eAAAjL,KAAA+K,EAAA/K,GAAAgL,EAAAhL,KACA,SAAA+K,EAAAC,GAEA,SAAAE,IAAA/J,KAAAgK,YAAAJ,EADAL,EAAAK,EAAAC,GAEAD,EAAA/F,UAAA,OAAAgG,EAAA1K,OAAA8K,OAAAJ,IAAAE,EAAAlG,UAAAgG,EAAAhG,UAAA,IAAAkG,KAGAhK,EAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,OAAA,IAAAD,IAAAA,EAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAnB,GAAA,IAAAoB,EAAAL,EAAAM,KAAArB,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAA0C,EAAAtB,GAAA,IAAAoB,EAAAL,EAAA,MAAAf,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAAwC,EAAAG,GAAAA,EAAAC,KAAAP,EAAAM,EAAAvB,OAAA,IAAAc,EAAA,SAAAG,GAAAA,EAAAM,EAAAvB,SAAAyB,KAAAN,EAAAG,GACAF,GAAAL,EAAAA,EAAAW,MAAAd,EAAAC,GAAA,KAAAQ,WAGAM,EAAAhB,MAAAA,KAAAgB,aAAA,SAAAf,EAAAgB,GACA,IAAA3C,EAAA4C,EAAA/C,EAAAgD,EAAAC,EAAA,CAAAC,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAnD,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAoD,KAAA,GAAAC,IAAA,IACA,OAAAL,EAAA,CAAAT,KAAAe,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAA,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAA,OAAA7B,OAAAmB,EACA,SAAAM,EAAAvD,GAAA,OAAA,SAAA4D,GAAA,OACA,SAAAC,GACA,GAAAzD,EAAA,MAAA,IAAA0D,UAAA,mCACA,KAAAZ,GAAA,IACA,GAAA9C,EAAA,EAAA4C,IAAA/C,EAAA+C,EAAA,EAAAa,EAAA,GAAA,SAAAA,EAAA,GAAA,QAAA,YAAA5D,EAAAA,EAAAY,KAAAmC,EAAAa,EAAA,KAAAlB,KAAA,OAAA1C,EAEA,OADA+C,EAAA,EAAA/C,IAAA4D,EAAA,CAAA,EAAA5D,EAAAkB,QACA0C,EAAA,IACA,KAAA,EAAA,KAAA,EAAA5D,EAAA4D,EAAA,MACA,KAAA,EAAA,OAAAX,EAAAC,QAAA,CAAAhC,MAAA0C,EAAA,GAAAlB,MAAA,GACA,KAAA,EAAAO,EAAAC,QAAAH,EAAAa,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAAX,EAAAI,IAAAS,MAAAb,EAAAG,KAAAU,MAAA,SACA,QACA,KAAA9D,EAAA,GAAAA,EAAAiD,EAAAG,MAAAvC,QAAAb,EAAAA,EAAAa,OAAA,MAAA,IAAA+C,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAAX,EAAA,EAAA,SACA,GAAA,IAAAW,EAAA,MAAA5D,GAAA4D,EAAA,GAAA5D,EAAA,IAAA4D,EAAA,GAAA5D,EAAA,IAAA,CAAAiD,EAAAC,MAAAU,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAAX,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAA,EAAA4D,EAAA,MACA,GAAA5D,GAAAiD,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAiD,EAAAI,IAAAU,KAAAH,GAAA,MACA5D,EAAA,IAAAiD,EAAAI,IAAAS,MACAb,EAAAG,KAAAU,MAAA,SAEAF,EAAAd,EAAAlC,KAAAkB,EAAAmB,GACA,MAAAnD,GAAA8D,EAAA,CAAA,EAAA9D,GAAAiD,EAAA,EAAA,QAAA5C,EAAAH,EAAA,EACA,GAAA,EAAA4D,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA1C,MAAA0C,EAAA,GAAAA,EAAA,QAAA,EAAAlB,MAAA,GArBAJ,CAAA,CAAAvC,EAAA4D,OAwBA3C,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IACA2O,EAAA,SAAA3D,GAEA,SAAA2D,EAAAhI,EAAAtD,GACA,IAAA4C,EAAA+E,EAAAtL,KAAAiB,KAAAgG,EAAAtD,IAAA1C,KAEA,OADAsF,EAAA2L,qBAAA,KACA3L,EAgBA,OApBAkE,EAAAwE,EAAA3D,GAMA2D,EAAAnK,UAAAuI,SAAA,SAAAzG,GAEA,GADA0E,EAAAxG,UAAAuI,SAAArN,KAAAiB,KAAA2F,IACA3F,KAAAkL,OACA,MAAAvM,MAAA,6CAGAqP,EAAAnK,UAAAuF,UAAA,SAAAR,GACA,OAAA7I,EAAAC,UAAA,OAAA,EAAA,WACA,IAAAsF,EAAAtF,KACA,OAAAgB,EAAAhB,KAAA,SAAA+F,GACA,MAAA,CAAA,EAAA,IAAA1F,QAAA,SAAArC,GAAA,OAAAsH,EAAA2L,qBAAAjT,UAIAgQ,EArBA,CADAxP,EAAA,KAuBA6P,aACAvP,EAAAkP,mBAAAA,gCCvEA,aACA,IACAzE,EADAC,EAAAxJ,MAAAA,KAAAwJ,YACAD,EAAApK,OAAAsK,gBACA,CAAAC,UAAA,cAAAC,OAAA,SAAAC,EAAAC,GAAAD,EAAAF,UAAAG,IACA,SAAAD,EAAAC,GAAA,IAAA,IAAAhL,KAAAgL,EAAAA,EAAAC,eAAAjL,KAAA+K,EAAA/K,GAAAgL,EAAAhL,KACA,SAAA+K,EAAAC,GAEA,SAAAE,IAAA/J,KAAAgK,YAAAJ,EADAL,EAAAK,EAAAC,GAEAD,EAAA/F,UAAA,OAAAgG,EAAA1K,OAAA8K,OAAAJ,IAAAE,EAAAlG,UAAAgG,EAAAhG,UAAA,IAAAkG,KAGAhK,EAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,OAAA,IAAAD,IAAAA,EAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAnB,GAAA,IAAAoB,EAAAL,EAAAM,KAAArB,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAA0C,EAAAtB,GAAA,IAAAoB,EAAAL,EAAA,MAAAf,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAAwC,EAAAG,GAAAA,EAAAC,KAAAP,EAAAM,EAAAvB,OAAA,IAAAc,EAAA,SAAAG,GAAAA,EAAAM,EAAAvB,SAAAyB,KAAAN,EAAAG,GACAF,GAAAL,EAAAA,EAAAW,MAAAd,EAAAC,GAAA,KAAAQ,WAGAM,EAAAhB,MAAAA,KAAAgB,aAAA,SAAAf,EAAAgB,GACA,IAAA3C,EAAA4C,EAAA/C,EAAAgD,EAAAC,EAAA,CAAAC,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAnD,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAoD,KAAA,GAAAC,IAAA,IACA,OAAAL,EAAA,CAAAT,KAAAe,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAA,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAA,OAAA7B,OAAAmB,EACA,SAAAM,EAAAvD,GAAA,OAAA,SAAA4D,GAAA,OACA,SAAAC,GACA,GAAAzD,EAAA,MAAA,IAAA0D,UAAA,mCACA,KAAAZ,GAAA,IACA,GAAA9C,EAAA,EAAA4C,IAAA/C,EAAA+C,EAAA,EAAAa,EAAA,GAAA,SAAAA,EAAA,GAAA,QAAA,YAAA5D,EAAAA,EAAAY,KAAAmC,EAAAa,EAAA,KAAAlB,KAAA,OAAA1C,EAEA,OADA+C,EAAA,EAAA/C,IAAA4D,EAAA,CAAA,EAAA5D,EAAAkB,QACA0C,EAAA,IACA,KAAA,EAAA,KAAA,EAAA5D,EAAA4D,EAAA,MACA,KAAA,EAAA,OAAAX,EAAAC,QAAA,CAAAhC,MAAA0C,EAAA,GAAAlB,MAAA,GACA,KAAA,EAAAO,EAAAC,QAAAH,EAAAa,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAAX,EAAAI,IAAAS,MAAAb,EAAAG,KAAAU,MAAA,SACA,QACA,KAAA9D,EAAA,GAAAA,EAAAiD,EAAAG,MAAAvC,QAAAb,EAAAA,EAAAa,OAAA,MAAA,IAAA+C,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAAX,EAAA,EAAA,SACA,GAAA,IAAAW,EAAA,MAAA5D,GAAA4D,EAAA,GAAA5D,EAAA,IAAA4D,EAAA,GAAA5D,EAAA,IAAA,CAAAiD,EAAAC,MAAAU,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAAX,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAA,EAAA4D,EAAA,MACA,GAAA5D,GAAAiD,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAiD,EAAAI,IAAAU,KAAAH,GAAA,MACA5D,EAAA,IAAAiD,EAAAI,IAAAS,MACAb,EAAAG,KAAAU,MAAA,SAEAF,EAAAd,EAAAlC,KAAAkB,EAAAmB,GACA,MAAAnD,GAAA8D,EAAA,CAAA,EAAA9D,GAAAiD,EAAA,EAAA,QAAA5C,EAAAH,EAAA,EACA,GAAA,EAAA4D,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA1C,MAAA0C,EAAA,GAAAA,EAAA,QAAA,EAAAlB,MAAA,GArBAJ,CAAA,CAAAvC,EAAA4D,OAwBA3C,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IACA0O,EAAA,SAAA1D,GAEA,SAAA0D,EAAA/H,EAAAtD,GACA,IAAA4C,EAAA+E,EAAAtL,KAAAiB,KAAAgG,EAAAtD,IAAA1C,KAEA,OADAsF,EAAA4L,sBAAA,KACA5L,EAeA,OAnBAkE,EAAAuE,EAAA1D,GAMA0D,EAAAlK,UAAAuI,SAAA,SAAAzG,GACA3F,KAAAkR,uBACAlR,KAAAkR,sBAAAvL,IAGAoI,EAAAlK,UAAAuF,UAAA,SAAAR,GACA,OAAA7I,EAAAC,UAAA,OAAA,EAAA,WACA,IAAAsF,EAAAtF,KACA,OAAAgB,EAAAhB,KAAA,SAAA+F,GACA,MAAA,CAAA,EAAA,IAAA1F,QAAA,SAAArC,GAAA,OAAAsH,EAAA4L,sBAAAlT,UAIA+P,EApBA,CADAvP,EAAA,YAsBAwS,QACAlS,EAAAiP,kBAAAA,wCCtEA,aACA,IACAxE,EADAC,EAAAxJ,MAAAA,KAAAwJ,YACAD,EAAApK,OAAAsK,gBACA,CAAAC,UAAA,cAAAC,OAAA,SAAAC,EAAAC,GAAAD,EAAAF,UAAAG,IACA,SAAAD,EAAAC,GAAA,IAAA,IAAAhL,KAAAgL,EAAAA,EAAAC,eAAAjL,KAAA+K,EAAA/K,GAAAgL,EAAAhL,KACA,SAAA+K,EAAAC,GAEA,SAAAE,IAAA/J,KAAAgK,YAAAJ,EADAL,EAAAK,EAAAC,GAEAD,EAAA/F,UAAA,OAAAgG,EAAA1K,OAAA8K,OAAAJ,IAAAE,EAAAlG,UAAAgG,EAAAhG,UAAA,IAAAkG,KAGAhK,EAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,EAAAC,EAAAC,GACA,OAAA,IAAAD,IAAAA,EAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAnB,GAAA,IAAAoB,EAAAL,EAAAM,KAAArB,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAA0C,EAAAtB,GAAA,IAAAoB,EAAAL,EAAA,MAAAf,IAAA,MAAApB,GAAAsC,EAAAtC,IACA,SAAAwC,EAAAG,GAAAA,EAAAC,KAAAP,EAAAM,EAAAvB,OAAA,IAAAc,EAAA,SAAAG,GAAAA,EAAAM,EAAAvB,SAAAyB,KAAAN,EAAAG,GACAF,GAAAL,EAAAA,EAAAW,MAAAd,EAAAC,GAAA,KAAAQ,WAGAM,EAAAhB,MAAAA,KAAAgB,aAAA,SAAAf,EAAAgB,GACA,IAAA3C,EAAA4C,EAAA/C,EAAAgD,EAAAC,EAAA,CAAAC,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAnD,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAoD,KAAA,GAAAC,IAAA,IACA,OAAAL,EAAA,CAAAT,KAAAe,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAA,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAA,OAAA7B,OAAAmB,EACA,SAAAM,EAAAvD,GAAA,OAAA,SAAA4D,GAAA,OACA,SAAAC,GACA,GAAAzD,EAAA,MAAA,IAAA0D,UAAA,mCACA,KAAAZ,GAAA,IACA,GAAA9C,EAAA,EAAA4C,IAAA/C,EAAA+C,EAAA,EAAAa,EAAA,GAAA,SAAAA,EAAA,GAAA,QAAA,YAAA5D,EAAAA,EAAAY,KAAAmC,EAAAa,EAAA,KAAAlB,KAAA,OAAA1C,EAEA,OADA+C,EAAA,EAAA/C,IAAA4D,EAAA,CAAA,EAAA5D,EAAAkB,QACA0C,EAAA,IACA,KAAA,EAAA,KAAA,EAAA5D,EAAA4D,EAAA,MACA,KAAA,EAAA,OAAAX,EAAAC,QAAA,CAAAhC,MAAA0C,EAAA,GAAAlB,MAAA,GACA,KAAA,EAAAO,EAAAC,QAAAH,EAAAa,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAAX,EAAAI,IAAAS,MAAAb,EAAAG,KAAAU,MAAA,SACA,QACA,KAAA9D,EAAA,GAAAA,EAAAiD,EAAAG,MAAAvC,QAAAb,EAAAA,EAAAa,OAAA,MAAA,IAAA+C,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAAX,EAAA,EAAA,SACA,GAAA,IAAAW,EAAA,MAAA5D,GAAA4D,EAAA,GAAA5D,EAAA,IAAA4D,EAAA,GAAA5D,EAAA,IAAA,CAAAiD,EAAAC,MAAAU,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAAX,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAA,EAAA4D,EAAA,MACA,GAAA5D,GAAAiD,EAAAC,MAAAlD,EAAA,GAAA,CAAAiD,EAAAC,MAAAlD,EAAA,GAAAiD,EAAAI,IAAAU,KAAAH,GAAA,MACA5D,EAAA,IAAAiD,EAAAI,IAAAS,MACAb,EAAAG,KAAAU,MAAA,SAEAF,EAAAd,EAAAlC,KAAAkB,EAAAmB,GACA,MAAAnD,GAAA8D,EAAA,CAAA,EAAA9D,GAAAiD,EAAA,EAAA,QAAA5C,EAAAH,EAAA,EACA,GAAA,EAAA4D,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA1C,MAAA0C,EAAA,GAAAA,EAAA,QAAA,EAAAlB,MAAA,GArBAJ,CAAA,CAAAvC,EAAA4D,OAwBA3C,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAAA8K,EAAA3L,EAAA,YACAgK,EAAAhK,EAAA,YACA4D,EAAA5D,EAAA,YACA6P,EAAA,SAAAhE,GAEA,SAAAgE,EAAArI,EAAAtD,GACA,IAAA4C,EAAA+E,EAAAtL,KAAAiB,KAAAgG,EAAAtD,IAAA1C,KAUA,OATAsF,EAAA2L,qBAAA,KACAvO,EAAAlD,iBAAA,QAAA,SAAAoM,GACA,IACAtG,EAAA6L,YAAAvF,GAEA,MAAA3N,GACAqF,QAAA4K,MAAAjQ,MAGAqH,EAsBA,OAlCAkE,EAAA6E,EAAAhE,GAcAgE,EAAAxK,UAAAuI,SAAA,SAAAzG,GACA3F,KAAAiR,sBAAA,GAAAtL,GAAAA,EAAA6C,EAAA/F,MAAAwB,SACAjE,KAAAiR,qBAAAtL,IAGA0I,EAAAxK,UAAAsN,YAAA,SAAAC,GACA,IAAAC,EAAArR,KAAA0C,OAAA4O,wBACApJ,EAAAkJ,EAAAG,QAAAF,EAAAG,KACAtQ,EAAAkQ,EAAAK,QAAAJ,EAAAK,IACA/L,EAAAvD,EAAAiC,MAAAsN,mBAAA,CAAAzJ,EAAAA,EAAAhH,EAAAA,IACAlB,KAAAoM,SAAAzG,IAEA0I,EAAAxK,UAAAuF,UAAA,SAAAR,GACA,OAAA7I,EAAAC,UAAA,OAAA,EAAA,WACA,IAAAsF,EAAAtF,KACA,OAAAgB,EAAAhB,KAAA,SAAA+F,GACA,MAAA,CAAA,EAAA,IAAA1F,QAAA,SAAArC,GAAA,OAAAsH,EAAA2L,qBAAAjT,UAIAqQ,EAnCA,CAoCAlE,EAAA6G,QACAlS,EAAAuP,YAAAA,mECvFA,aACAlP,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAAA2R,EACA,SAAAhL,EAAAtD,GACA1C,KAAAgG,WAAAA,EACAhG,KAAA0C,OAAAA,GAIA5D,EAAAkS,OAAAA,2BCTA,aACA7R,OAAAC,eAAAN,EAAA,aAAA,CAAAO,OAAA,IACA,IAAAmJ,EAAAhK,EAAA,WACA6F,EAAA,WACA,SAAAA,KA6JA,OA3JAA,EAAA8H,YAAA,SAAAF,QACA,IAAAA,IAAAA,EAAA,IACA,IAAA2F,EAAArS,SAAAG,cAAA,YACA,GAAAkS,EAAA,CAIAA,EAAAjS,UAAAkS,OAAA,UACA,IAAAC,EAAAvS,SAAAG,cAAA,yBACA,GAAAoS,EAAA,CAIAA,EAAAC,UAAA9F,EACA,IAAA+F,EAAAzS,SAAAG,cAAA,yBACA,GAAAsS,EAAA,CAIA,IAAAC,EAAA,WACAL,EAAAjS,UAAAC,IAAA,aACAgS,EAAApS,iBAAA,gBAAA,WACAoS,EAAAjS,UAAAC,IAAA,UACAgS,EAAAjS,UAAAkS,OAAA,eAEAG,EAAAE,oBAAA,QAAAD,IAEAD,EAAAxS,iBAAA,QAAAyS,QAXA3O,QAAA4K,MAAA,0CANA5K,QAAA4K,MAAA,0CANA5K,QAAA4K,MAAA,yBAyBA7J,EAAA4D,WAAA,SAAAjF,EAAA+C,GACA,IAAA2H,EAAA3H,EAAAmC,EAAAA,OAAA,IAAAwF,EAAA,EAAAA,EAAAyE,EAAApM,EAAA7E,EAAAA,OAAA,IAAAiR,EAAA,EAAAA,EAAAC,EAAArM,EAAA/H,EAAAA,OAAA,IAAAoU,EAAA,EAAAA,EAAAC,EAAAtM,EAAA+B,UAAAA,OAAA,IAAAuK,EAAA,GAAAA,EAAAC,EAAAvM,EAAAoC,YAAAA,OAAA,IAAAmK,EAAA,GAAAA,EACAtP,EAAAuP,OACAvP,EAAA8E,UAAAA,EACA9E,EAAAmF,YAAAA,EACAnF,EAAAwP,YACAxP,EAAAyP,IAAAvK,EAAAhH,EAAAlD,EAAA,EAAA,EAAA8G,KAAA4N,IAAA,GACA1P,EAAA2P,OACA3P,EAAA4P,WAEAvO,EAAAiE,SAAA,SAAAM,GACA,IAAA5F,EAAA4F,EAAA5F,QACAA,EAAAuP,OACAvP,EAAA8E,UAAAU,EAAA/F,MAAA8F,WACAvF,EAAAwP,YAGA,IAFA,IAAAK,EAAA,EAAArK,EAAA/F,MAAAmC,aACAkO,EAAA,EAAAtK,EAAA/F,MAAAmC,aACA1D,EAAA,EAAAA,EAAAsH,EAAA/F,MAAAsB,KAAA7C,IACA,IAAA,IAAAgH,EAAA,EAAAA,EAAAM,EAAA/F,MAAAwB,QAAAiE,IACAlF,EAAAyP,IAAAK,EAAA5K,EAAAM,EAAA/F,MAAAoC,aAAAgO,EAAAC,EAAA5R,EAAAsH,EAAA/F,MAAAuC,aAAA6N,EAAArK,EAAA/F,MAAAmC,aAAA,EAAA,EAAAE,KAAA4N,IACA1P,EAAAqO,KAAAyB,EAAA5K,EAAAM,EAAA/F,MAAAoC,aAAA,EAAAgO,EAAAC,EAAA5R,EAAAsH,EAAA/F,MAAAuC,cAAA,EAAA6N,EAAA,EAAAA,GAGA7P,EAAA2P,OACA3P,EAAA4P,WAEAvO,EAAAC,YAAA,SAAAsE,GACAA,EAAA5F,QAAA+P,UAAA,EAAA,EAAAnK,EAAAlG,OAAA0C,MAAAwD,EAAAlG,OAAA2C,SAEAhB,EAAA2O,gBAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAF,EAAA/K,EAAAgL,IAAAD,EAAA/K,EAAAgL,IAAAC,EAAAA,GAEA9O,EAAAsN,mBAAA,SAAAsB,GACA,IAAA,IAAA5U,EAAA,EAAAA,EAAAmK,EAAA/F,MAAAwB,QAAA5F,IACA,GAAAgG,EAAA2O,gBAAAC,EAAA,EAAAzK,EAAA/F,MAAAmC,aAAAvG,EACAmK,EAAA/F,MAAAoC,aACA,EAAA2D,EAAA/F,MAAAmC,aAAA4D,EAAA/F,MAAAmC,cACA,OAAAvG,EAGA,OAAA,GAEAgG,EAAA+O,sBAAA,WACA,OAAAtO,KAAAgM,MAAAhM,KAAAiM,SAAAvI,EAAA/F,MAAAwB,UAEAI,EAAAsM,OAAA,SAAA0C,GACA,OAAAA,EAAAvO,KAAAgM,MAAAhM,KAAAiM,SAAAsC,EAAArU,UAEAqF,EAAAgE,eAAA,WACA,IAAA/H,EAAA,KACAgT,EAAA,IAAAjT,QAAA,SAAArC,GAAA,OAAAsC,EAAAtC,IAIA,OAHAsC,GACAkE,OAAA+O,sBAAAjT,GAEAgT,GAEAjP,EAAAwM,MAAA,SAAA2C,GAEA,IADA,IAAAC,EAAA,GACApV,EAAA,EAAAA,EAAAmV,EAAAxU,OAAAX,IACAoV,EAAApV,GAAAmV,EAAAnV,GAAAqV,QAEA,OAAAD,GAEApP,EAAAiM,oBAAA,SAAAxM,EAAAkC,EAAAL,GACA,IAAAgO,EAAAtP,EAAAwM,MAAA/M,GACA,GAAA6P,EAAA,GAAAhO,KAAA6C,EAAArG,WAAA+B,OACAyB,EAAA,GACAA,GAAA6C,EAAA/F,MAAAwB,QACA,MAAA,CACAuM,SAAA,EACA1M,IAAA6P,GAKA,IAFA,IAAA/N,GAAA,EACAC,EAAA,EACAxH,EAAA,EAAAA,EAAAmK,EAAA/F,MAAAsB,KAAA,EAAA1F,IACA,GAAAsV,EAAAtV,EAAA,GAAAsH,KAAA6C,EAAArG,WAAA+B,MAAA,CACA0B,GAAA,EACAC,EAAAxH,EACA,MAOA,OAJAuH,IACAC,EAAA2C,EAAA/F,MAAAsB,KAAA,GAEA4P,EAAA9N,GAAAF,GAAAK,EACA,CACAwK,SAAA,EACA1M,IAAA6P,IAGAtP,EAAAhB,SAAA,WACA,IAAAuQ,EAAA,GAAAC,GAAA,EACA,SAAAC,IACAD,IACAA,GAAA,EACArP,OAAA+O,sBACA/O,OAAA+O,sBAAAQ,GAGAC,WAAAD,EAAA,KAIA,SAAAA,IACAH,EAAAK,QAAA,SAAAC,GACAA,MAEAL,GAAA,EAOA,MAAA,CACAjU,IAAA,SAAAsU,GANA,IAAAA,EAOAN,EAAA5U,QACAwF,OAAAhF,iBAAA,SAAAsU,IARAI,EAUAA,IARAN,EAAA1R,KAAAgS,MAYA7P,EAAAuL,oBAAA9K,KAAAqP,IAAA,GAAA,GAAA,EACA9P,EAAAwL,qBAAAxL,EAAAuL,oBACAvL,EA9JA,GAgKAvF,EAAAuF,MAAAA,sCC7JA,IAAA+P,EAAAC,EAAAD,EAoBApU,KApBAqU,EAoBA,WAEA,aAEA,IAgBAC,EAm8CAC,EAn9CAC,EAKA,oBAAAC,KAAAA,KACA,oBAAAjQ,OAAAA,YACA,IAAAgQ,EAAAA,EAGA,GAIAE,GAAAF,EAAAjV,YAAAiV,EAAAG,YACAC,EAAAF,GAAA,0BAAAG,KAAAL,EAAAjK,SAAAuK,QACAC,GAAA,EACAC,EAAA,GAAAC,EAAA,EAEA5S,EAAA,CAEA6J,MA+IA,SAAAgJ,EAAAC,GAGA,IAAAC,GADAD,EAAAA,GAAA,IACAC,gBAAA,EACAC,EAAAD,KACAD,EAAAG,sBAAAF,EAEAA,EAAA,IAIA,GAFAD,EAAAC,cAAAA,EAEAD,EAAAI,QAAAlT,EAAAmT,kBACA,CACA,IAAAC,EAsyCA,WAEA,IAAApT,EAAAmT,kBACA,OAAA,EACA,IAAAT,GAAA,OAAA1S,EAAAqT,YACA,MAAA,IAAA/W,MACA,uIAGA,IAAAgX,EAAAtT,EAAAqT,aAAApB,EAEAqB,KAAA,IAAAA,EAAAC,QAAA,KAAA,IAAA,KAAA,aACA,IAAAH,EAAA,IAAAjB,EAAAqB,OAAAF,GAIA,OAHAF,EAAAzJ,UAAA8J,EACAL,EAAAM,GAAAd,IACAD,EAAAS,EAAAM,IAAAN,EArzCAO,GAmBA,OAjBAP,EAAAQ,SAAAd,EAAA1U,KACAgV,EAAAS,UAAAf,EAAAgB,MACAV,EAAAW,aAAAjB,EAAAkB,SACAZ,EAAAa,UAAAnB,EAAAjH,MAEAiH,EAAA1U,KAAA4U,EAAAF,EAAA1U,MACA0U,EAAAgB,MAAAd,EAAAF,EAAAgB,OACAhB,EAAAkB,SAAAhB,EAAAF,EAAAkB,UACAlB,EAAAjH,MAAAmH,EAAAF,EAAAjH,cACAiH,EAAAI,YAEAE,EAAAd,YAAA,CACA4B,MAAArB,EACAsB,OAAArB,EACAsB,SAAAhB,EAAAM,KAMA,IAAAW,EAAA,KACA,iBAAAxB,EAGAwB,EADAvB,EAAAwB,SACA,IAAAC,EAAAzB,GAEA,IAAA0B,EAAA1B,IAEA,IAAAD,EAAA4B,UAAAzB,EAAAH,EAAA6B,OAAA1B,EAAAH,EAAA8B,IAEAN,EAAA,IAAAO,EAAA9B,IAEAX,EAAA0C,MAAAhC,aAAAgC,MAAAhC,aAAA/V,UACAuX,EAAA,IAAAS,EAAAhC,IAEA,OAAAuB,EAAAU,OAAAlC,IAhMAzR,QAwMA,SAAAyR,EAAAC,GAKA,IAAAkC,GAAA,EAGAC,GAAA,EAGAC,EAAA,IAGAC,EAAA,OAGAC,EAAA,KA0CA,WAEA,GAAA,iBAAAtC,EACA,OAEA,iBAAAA,EAAAuC,WACA,IAAAvC,EAAAuC,UAAA1Y,SACA,IAAAqD,EAAAsV,eAAA/B,QAAAT,EAAAuC,aAEAH,EAAApC,EAAAuC,YAGA,kBAAAvC,EAAAyC,QACAzC,EAAAyC,kBAAAjO,SACA0N,EAAAlC,EAAAyC,QAEA,iBAAAzC,EAAA0C,UACAL,EAAArC,EAAA0C,SAEA,iBAAA1C,EAAA2C,YACAL,EAAAtC,EAAA2C,WAEA,kBAAA3C,EAAA4C,SACAT,EAAAnC,EAAA4C,QA/DAC,GAEA,IAAAC,EAAA,IAAAC,OAAAT,EAAA,KAEA,iBAAAvC,IACAA,EAAA9J,KAAAc,MAAAgJ,IAEA,GAAAA,aAAAvL,MACA,CACA,IAAAuL,EAAAlW,QAAAkW,EAAA,aAAAvL,MACA,OAAAwO,EAAA,KAAAjD,GACA,GAAA,iBAAAA,EAAA,GACA,OAAAiD,EAAAC,EAAAlD,EAAA,IAAAA,QAEA,GAAA,iBAAAA,EAmBA,MAjBA,iBAAAA,EAAAtR,OACAsR,EAAAtR,KAAAwH,KAAAc,MAAAgJ,EAAAtR,OAEAsR,EAAAtR,gBAAA+F,QAEAuL,EAAAvR,SACAuR,EAAAvR,OAAAuR,EAAAmD,MAAAnD,EAAAmD,KAAA1U,QAEAuR,EAAAvR,SACAuR,EAAAvR,OAAAuR,EAAAtR,KAAA,aAAA+F,MACAuL,EAAAvR,OACAyU,EAAAlD,EAAAtR,KAAA,KAEAsR,EAAAtR,KAAA,aAAA+F,OAAA,iBAAAuL,EAAAtR,KAAA,KACAsR,EAAAtR,KAAA,CAAAsR,EAAAtR,QAGAuU,EAAAjD,EAAAvR,QAAA,GAAAuR,EAAAtR,MAAA,IAIA,KAAA,oDA+BA,SAAAwU,EAAAE,GAEA,GAAA,iBAAAA,EACA,MAAA,GACA,IAAAC,EAAA,GACA,IAAA,IAAAC,KAAAF,EACAC,EAAArW,KAAAsW,GACA,OAAAD,EAIA,SAAAJ,EAAAxU,EAAAC,GAEA,IAAAF,EAAA,GAEA,iBAAAC,IACAA,EAAAyH,KAAAc,MAAAvI,IACA,iBAAAC,IACAA,EAAAwH,KAAAc,MAAAtI,IAEA,IAAA6U,EAAA9U,aAAAgG,OAAA,EAAAhG,EAAA3E,OACA0Z,IAAA9U,EAAA,aAAA+F,OAGA,GAAA8O,GAAAnB,EACA,CACA,IAAA,IAAAjZ,EAAA,EAAAA,EAAAsF,EAAA3E,OAAAX,IAEA,EAAAA,IACAqF,GAAA6T,GACA7T,GAAAiV,EAAAhV,EAAAtF,GAAAA,GAEA,EAAAuF,EAAA5E,SACA0E,GAAA8T,GAIA,IAAA,IAAA3R,EAAA,EAAAA,EAAAjC,EAAA5E,OAAA6G,IACA,CAGA,IAFA,IAAA+S,EAAAH,EAAA9U,EAAA3E,OAAA4E,EAAAiC,GAAA7G,OAEA6Z,EAAA,EAAAA,EAAAD,EAAAC,IACA,CACA,EAAAA,IACAnV,GAAA6T,GACA,IAAAuB,EAAAL,GAAAC,EAAA/U,EAAAkV,GAAAA,EACAnV,GAAAiV,EAAA/U,EAAAiC,GAAAiT,GAAAD,GAGAhT,EAAAjC,EAAA5E,OAAA,IACA0E,GAAA8T,GAGA,OAAA9T,EAIA,SAAAiV,EAAAI,EAAAF,GAEA,GAAA,MAAAE,EACA,MAAA,GAEAA,EAAAA,EAAAC,WAAAC,QAAAhB,EAAAR,EAAAA,GAEA,IAAAyB,EAAA,kBAAA7B,GAAAA,GACAA,aAAA1N,OAAA0N,EAAAwB,IASA,SAAAE,EAAAI,GAEA,IAAA,IAAA9a,EAAA,EAAAA,EAAA8a,EAAAna,OAAAX,IACA,IAAA,EAAA0a,EAAAnD,QAAAuD,EAAA9a,IACA,OAAA,EACA,OAAA,EAbA+a,CAAAL,EAAA1W,EAAAsV,kBACA,EAAAoB,EAAAnD,QAAA2B,IACA,MAAAwB,EAAAM,OAAA,IACA,MAAAN,EAAAM,OAAAN,EAAA/Z,OAAA,GAEA,OAAAka,EAAAzB,EAAAsB,EAAAtB,EAAAsB,KAhVA,GApBA1W,EAAAiX,WAAAC,OAAAC,aAAA,IACAnX,EAAAoX,SAAAF,OAAAC,aAAA,IACAnX,EAAAqX,gBAAA,SACArX,EAAAsV,eAAA,CAAA,KAAA,KAAA,IAAAtV,EAAAqX,iBACArX,EAAAmT,mBAAAd,KAAAF,EAAAqB,OACAxT,EAAAqT,YAAA,KAGArT,EAAAsX,eAAA,SACAtX,EAAAuX,gBAAA,QACAvX,EAAAwX,iBAAA,IAGAxX,EAAAyX,OAAAA,EACAzX,EAAA0X,aAAAA,EACA1X,EAAAuU,gBAAAA,EACAvU,EAAA8U,aAAAA,EACA9U,EAAAwU,eAAAA,EACAxU,EAAA4U,uBAAAA,EAEAzC,EAAAwF,OACA,CACA,IAAAC,EAAAzF,EAAAwF,OACAC,EAAAC,GAAAhO,MAAA,SAAAiO,GAEA,IAAA3D,EAAA2D,EAAA3D,QAAA,GACA4D,EAAA,GAsBA,OApBApa,KAAAqa,KAAA,SAAAC,GAMA,KAJA,UAAAL,EAAAja,MAAAua,KAAA,WAAAC,eACA,SAAAP,EAAAja,MAAAya,KAAA,QAAAC,eACAlG,EAAAmG,cAEA3a,KAAA4a,OAAA,IAAA5a,KAAA4a,MAAA5b,OACA,OAAA,EAEA,IAAA,IAAAX,EAAA,EAAAA,EAAA2B,KAAA4a,MAAA5b,OAAAX,IAEA+b,EAAAlY,KAAA,CACA2Y,KAAA7a,KAAA4a,MAAAvc,GACAyc,UAAA9a,KACA+a,eAAAd,EAAAe,OAAA,GAAAxE,OAKAyE,IACAjb,KAGA,SAAAib,IAEA,GAAA,IAAAb,EAAApb,OAAA,CAOA,IAwCAkc,EAAAL,EAAAM,EAAAC,EAxCA9c,EAAA8b,EAAA,GAEA,GAAA/E,EAAA8E,EAAAkB,QACA,CACA,IAAAC,EAAAnB,EAAAkB,OAAA/c,EAAAuc,KAAAvc,EAAAwc,WAEA,GAAA,iBAAAQ,EACA,CACA,GAAA,UAAAA,EAAAnS,OAGA,OA6BA+R,EA9BA,aA8BAL,EA9BAvc,EAAAuc,KA8BAM,EA9BA7c,EAAAwc,UA8BAM,EA9BAE,EAAAF,YAgCA/F,EAAA8E,EAAAjM,QACAiM,EAAAjM,MAAA,CAAAgN,KAAAA,GAAAL,EAAAM,EAAAC,IA9BA,GAAA,SAAAE,EAAAnS,OAGA,YADAoS,IAGA,iBAAAD,EAAA9E,SACAlY,EAAAyc,eAAAd,EAAAe,OAAA1c,EAAAyc,eAAAO,EAAA9E,cAEA,GAAA,SAAA8E,EAGA,YADAC,IAMA,IAAAC,EAAAld,EAAAyc,eAAA1E,SACA/X,EAAAyc,eAAA1E,SAAA,SAAAoF,GAEApG,EAAAmG,IACAA,EAAAC,EAAAnd,EAAAuc,KAAAvc,EAAAwc,WACAS,KAGAlZ,EAAA6J,MAAA5N,EAAAuc,KAAAvc,EAAAyc,qBA1CA1F,EAAA8E,EAAA9D,WACA8D,EAAA9D,WAkDA,SAAAkF,IAEAnB,EAAAsB,OAAA,EAAA,GACAT,MAoQA,SAAAU,EAAAnF,GAEAxW,KAAA4b,QAAA,KACA5b,KAAA6b,WAAA,EACA7b,KAAA8b,YAAA,EACA9b,KAAAkV,OAAA,KACAlV,KAAA+b,WAAA,EACA/b,KAAAgc,aAAA,GACAhc,KAAAic,UAAA,EACAjc,KAAAkc,OAAA,EACAlc,KAAAmc,WAAA,KACAnc,KAAAoc,cAAA,EACApc,KAAAqc,iBAAA,CACAzY,KAAA,GACA0Y,OAAA,GACAjE,KAAA,IAqFA,SAAA7B,GAGA,IAAA+F,EAAAC,EAAAhG,GACA+F,EAAAE,UAAAC,SAAAH,EAAAE,WACAjG,EAAA/V,MAAA+V,EAAAL,QACAoG,EAAAE,UAAA,MACAzc,KAAA4b,QAAA,IAAA7B,EAAAwC,IACAvc,KAAA4b,QAAAlF,SAAA1W,MACAmV,QAAAoH,GA5FAxd,KAAAiB,KAAAwW,GAEAxW,KAAA2c,WAAA,SAAAxG,EAAAyG,GAGA,GAAA5c,KAAAoc,cAAA/G,EAAArV,KAAAmV,QAAA0H,kBACA,CACA,IAAAC,EAAA9c,KAAAmV,QAAA0H,iBAAA1G,QACA4G,IAAAD,IACA3G,EAAA2G,GAEA9c,KAAAoc,cAAA,EAGA,IAAAY,EAAAhd,KAAAgc,aAAA7F,EACAnW,KAAAgc,aAAA,GAEA,IAAAP,EAAAzb,KAAA4b,QAAA1P,MAAA8Q,EAAAhd,KAAA+b,YAAA/b,KAAA6b,WAEA,IAAA7b,KAAA4b,QAAAqB,WAAAjd,KAAA4b,QAAAsB,UAAA,CAGA,IAAAC,EAAA1B,EAAApD,KAAA+E,OAEApd,KAAA6b,YAEA7b,KAAAgc,aAAAgB,EAAAvS,UAAA0S,EAAAnd,KAAA+b,YACA/b,KAAA+b,WAAAoB,GAGA1B,GAAAA,EAAA7X,OACA5D,KAAAic,WAAAR,EAAA7X,KAAA5E,QAEA,IAAAqe,EAAArd,KAAA6b,WAAA7b,KAAAmV,QAAAmI,SAAAtd,KAAAic,WAAAjc,KAAAmV,QAAAmI,QAEA,GAAA1I,EAEAJ,EAAAG,YAAA,CACA8G,QAAAA,EACAhF,SAAApU,EAAAkb,UACAC,SAAAH,SAGA,GAAAhI,EAAArV,KAAAmV,QAAAgB,SAAAyG,EACA,CAEA,GADA5c,KAAAmV,QAAAgB,MAAAsF,EAAAzb,KAAA4b,SACA5b,KAAA4b,QAAAqB,UAAAjd,KAAA4b,QAAAsB,UACA,OACAzB,OAAAsB,EACA/c,KAAAqc,sBAAAU,EAiBA,OAdA/c,KAAAmV,QAAA1U,MAAAT,KAAAmV,QAAAgB,QACAnW,KAAAqc,iBAAAzY,KAAA5D,KAAAqc,iBAAAzY,KAAA6Z,OAAAhC,EAAA7X,MACA5D,KAAAqc,iBAAAC,OAAAtc,KAAAqc,iBAAAC,OAAAmB,OAAAhC,EAAAa,QACAtc,KAAAqc,iBAAAhE,KAAAoD,EAAApD,MAGArY,KAAA8b,aAAAuB,IAAAhI,EAAArV,KAAAmV,QAAAkB,WAAAoF,GAAAA,EAAApD,KAAA6E,UACAld,KAAAmV,QAAAkB,SAAArW,KAAAqc,iBAAArc,KAAAkV,QACAlV,KAAA8b,YAAA,GAGAuB,GAAA5B,GAAAA,EAAApD,KAAA4E,QACAjd,KAAAmc,aAEAV,IAGAzb,KAAA0d,WAAA,SAAAxP,GAEAmH,EAAArV,KAAAmV,QAAAjH,OACAlO,KAAAmV,QAAAjH,MAAAA,GACA0G,GAAA5U,KAAAmV,QAAAjH,OAEAsG,EAAAG,YAAA,CACA8B,SAAApU,EAAAkb,UACArP,MAAAA,EACAsP,UAAA,KAmBA,SAAA5G,EAAAJ,GAOA,IAAAmH,GALAnH,EAAAA,GAAA,IACAiG,YACAjG,EAAAiG,UAAApa,EAAAuX,iBACA+B,EAAA5c,KAAAiB,KAAAwW,GAMAxW,KAAAmc,WAFAzH,EAEA,WAEA1U,KAAA4d,aACA5d,KAAA6d,gBAKA,WAEA7d,KAAA4d,cAIA5d,KAAAoX,OAAA,SAAA9K,GAEAtM,KAAAkV,OAAA5I,EACAtM,KAAAmc,cAGAnc,KAAA4d,WAAA,WAEA,GAAA5d,KAAA6b,UAEA7b,KAAA6d,mBAFA,CAqBA,GAfAF,EAAA,IAAAG,eAEA9d,KAAAmV,QAAA4I,kBAEAJ,EAAAI,gBAAA/d,KAAAmV,QAAA4I,iBAGArJ,IAEAiJ,EAAAK,OAAAC,EAAAje,KAAA6d,aAAA7d,MACA2d,EAAA7R,QAAAmS,EAAAje,KAAAke,YAAAle,OAGA2d,EAAAQ,KAAA,MAAAne,KAAAkV,QAAAR,GAEA1U,KAAAmV,QAAAiJ,uBACA,CACA,IAAA1R,EAAA1M,KAAAmV,QAAAiJ,uBAEA,IAAA,IAAAC,KAAA3R,EAEAiR,EAAAW,iBAAAD,EAAA3R,EAAA2R,IAIA,GAAAre,KAAAmV,QAAAsH,UACA,CACA,IAAA8B,EAAAve,KAAAkc,OAAAlc,KAAAmV,QAAAsH,UAAA,EACAkB,EAAAW,iBAAA,QAAA,SAAAte,KAAAkc,OAAA,IAAAqC,GACAZ,EAAAW,iBAAA,gBAAA,mBAGA,IACAX,EAAAxS,OAEA,MAAAqT,GACAxe,KAAAke,YAAAM,EAAAvS,SAGAyI,GAAA,IAAAiJ,EAAAc,OACAze,KAAAke,cAEAle,KAAAkc,QAAAlc,KAAAmV,QAAAsH,YAGAzc,KAAA6d,aAAA,WAEA,IAAAF,EAAAe,aAGAf,EAAAc,OAAA,KAAA,KAAAd,EAAAc,OAEAze,KAAAke,eAIAle,KAAA6b,WAAA7b,KAAAmV,QAAAsH,WAAAzc,KAAAkc,OAUA,SAAAyB,GAEA,IAAAgB,EAAAhB,EAAAiB,kBAAA,iBACA,GAAA,OAAAD,EACA,OAAA,EAEA,OAAAjC,SAAAiC,EAAAE,OAAAF,EAAAjU,YAAA,KAAA,IAhBAoU,CAAAnB,GACA3d,KAAA2c,WAAAgB,EAAAoB,iBAGA/e,KAAAke,YAAA,SAAAc,GAEA,IAAAC,EAAAtB,EAAAuB,YAAAF,EACAhf,KAAA0d,WAAA,IAAA/e,MAAAsgB,KAgBA,SAAA9H,EAAAX,GAOA,IAAA2I,EAAAzL,GALA8C,EAAAA,GAAA,IACAiG,YACAjG,EAAAiG,UAAApa,EAAAsX,gBACAgC,EAAA5c,KAAAiB,KAAAwW,GAMA,IAAA4I,EAAA,oBAAAzE,WAEA3a,KAAAoX,OAAA,SAAAyD,GAEA7a,KAAAkV,OAAA2F,EACAnH,EAAAmH,EAAAnH,OAAAmH,EAAAwE,aAAAxE,EAAAyE,SAEAF,IAEAD,EAAA,IAAAxE,YACAqD,OAAAC,EAAAje,KAAA6d,aAAA7d,MACAmf,EAAArT,QAAAmS,EAAAje,KAAAke,YAAAle,OAGAmf,EAAA,IAAAI,eAEAvf,KAAAmc,cAGAnc,KAAAmc,WAAA,WAEAnc,KAAA6b,WAAA7b,KAAAmV,QAAAmI,WAAAtd,KAAAic,UAAAjc,KAAAmV,QAAAmI,UACAtd,KAAA4d,cAGA5d,KAAA4d,WAAA,WAEA,IAAArH,EAAAvW,KAAAkV,OACA,GAAAlV,KAAAmV,QAAAsH,UACA,CACA,IAAA8B,EAAAzZ,KAAA8L,IAAA5Q,KAAAkc,OAAAlc,KAAAmV,QAAAsH,UAAAzc,KAAAkV,OAAAsK,MACAjJ,EAAA7C,EAAA3U,KAAAwX,EAAAvW,KAAAkc,OAAAqC,GAEA,IAAAkB,EAAAN,EAAAO,WAAAnJ,EAAAvW,KAAAmV,QAAAwK,UACAP,GACApf,KAAA6d,aAAA,CAAA+B,OAAA,CAAAhf,OAAA6e,MAGAzf,KAAA6d,aAAA,SAAAzM,GAGApR,KAAAkc,QAAAlc,KAAAmV,QAAAsH,UACAzc,KAAA6b,WAAA7b,KAAAmV,QAAAsH,WAAAzc,KAAAkc,QAAAlc,KAAAkV,OAAAsK,KACAxf,KAAA2c,WAAAvL,EAAAwO,OAAAhf,SAGAZ,KAAAke,YAAA,WAEAle,KAAA0d,WAAAyB,EAAAjR,QAQA,SAAA2I,EAAAL,GAKA,IAAAqJ,EAFAlE,EAAA5c,KAAAiB,KADAwW,EAAAA,GAAA,IAIAxW,KAAAoX,OAAA,SAAA0I,GAGA,OADAD,EAAAC,EACA9f,KAAAmc,cAEAnc,KAAAmc,WAAA,WAEA,IAAAnc,KAAA6b,UAAA,CACA,IAAA2D,EAAAxf,KAAAmV,QAAAsH,UACAtG,EAAAqJ,EAAAK,EAAAhB,OAAA,EAAAW,GAAAK,EAGA,OAFAA,EAAAL,EAAAK,EAAAhB,OAAAW,GAAA,GACAxf,KAAA6b,WAAAgE,EACA7f,KAAA2c,WAAAxG,KAOA,SAAAc,EAAAT,GAIAmF,EAAA5c,KAAAiB,KAFAwW,EAAAA,GAAA,IAIA,IAAA4D,EAAA,GACA2F,GAAA,EACAC,GAAA,EAEAhgB,KAAAigB,MAAA,WAEAtE,EAAA9X,UAAAoc,MAAAlf,MAAAf,KAAAkgB,WACAlgB,KAAAkV,OAAA+K,SAGAjgB,KAAAmgB,OAAA,WAEAxE,EAAA9X,UAAAsc,OAAApf,MAAAf,KAAAkgB,WACAlgB,KAAAkV,OAAAiL,UAGAngB,KAAAoX,OAAA,SAAAA,GAEApX,KAAAkV,OAAAkC,EAEApX,KAAAkV,OAAA8B,GAAA,OAAAhX,KAAAogB,aACApgB,KAAAkV,OAAA8B,GAAA,MAAAhX,KAAAqgB,YACArgB,KAAAkV,OAAA8B,GAAA,QAAAhX,KAAAsgB,eAGAtgB,KAAAugB,iBAAA,WAEAP,GAAA,IAAA5F,EAAApb,SACAgB,KAAA6b,WAAA,IAIA7b,KAAAmc,WAAA,WAEAnc,KAAAugB,mBACAnG,EAAApb,OAEAgB,KAAA2c,WAAAvC,EAAAoG,SAIAT,GAAA,GAIA/f,KAAAogB,YAAAnC,EAAA,SAAA9H,GAEA,IAEAiE,EAAAlY,KAAA,iBAAAiU,EAAAA,EAAAA,EAAA6C,SAAAhZ,KAAAmV,QAAAwK,WAEAI,IAEAA,GAAA,EACA/f,KAAAugB,mBACAvgB,KAAA2c,WAAAvC,EAAAoG,UAGA,MAAAtS,GAEAlO,KAAAsgB,aAAApS,KAEAlO,MAEAA,KAAAsgB,aAAArC,EAAA,SAAA/P,GAEAlO,KAAAygB,iBACAzgB,KAAA0d,WAAAxP,IACAlO,MAEAA,KAAAqgB,WAAApC,EAAA,WAEAje,KAAAygB,iBACAT,GAAA,EACAhgB,KAAAogB,YAAA,KACApgB,MAEAA,KAAAygB,eAAAxC,EAAA,WAEAje,KAAAkV,OAAAwL,eAAA,OAAA1gB,KAAAogB,aACApgB,KAAAkV,OAAAwL,eAAA,MAAA1gB,KAAAqgB,YACArgB,KAAAkV,OAAAwL,eAAA,QAAA1gB,KAAAsgB,eACAtgB,MAOA,SAAA+Z,EAAA5E,GAGA,IAIAD,EACAyL,EAGAC,EARAC,EAAA,+CAEApM,EAAAzU,KACA8gB,EAAA,EAGAC,GAAA,EACAC,GAAA,EAEAC,EAAA,GACAC,EAAA,CACAtd,KAAA,GACA0Y,OAAA,GACAjE,KAAA,IAGA,GAAAhD,EAAAF,EAAA1U,MACA,CACA,IAAAwV,EAAAd,EAAA1U,KACA0U,EAAA1U,KAAA,SAAAgb,GAIA,GAFAyF,EAAAzF,EAEA0F,IACAC,QAEA,CAIA,GAHAA,IAGA,IAAAF,EAAAtd,KAAA5E,OACA,OAEA8hB,GAAArF,EAAA7X,KAAA5E,OACAmW,EAAAmI,SAAAwD,EAAA3L,EAAAmI,QACAqD,EAAAU,QAEApL,EAAAiL,EAAAzM,KA8EA,SAAA2M,IAQA,GANAF,GAAAN,IAEAU,EAAA,YAAA,wBAAA,6DAAAjf,EAAAwX,iBAAA,KACA+G,GAAA,GAGAzL,EAAAoM,eAEA,IAAA,IAAAljB,EAAA,EAAAA,EAAA6iB,EAAAtd,KAAA5E,OAAAX,IACA,IAAA6iB,EAAAtd,KAAAvF,GAAAW,QAAA,KAAAkiB,EAAAtd,KAAAvF,GAAA,IACA6iB,EAAAtd,KAAA8X,OAAArd,IAAA,GAMA,OAHA8iB,KAWA,WAEA,IAAAD,EACA,OACA,IAAA,IAAA7iB,EAAA,EAAA8iB,KAAA9iB,EAAA6iB,EAAAtd,KAAA5E,OAAAX,IACA,IAAA,IAAA2F,EAAA,EAAAA,EAAAkd,EAAAtd,KAAAvF,GAAAW,OAAAgF,IACA,CACA,IAAA+T,EAAAmJ,EAAAtd,KAAAvF,GAAA2F,GAEAmR,EAAAqM,cACAzJ,EAAAA,EAAA0J,QAGAR,EAAA/e,KAAA6V,GAEAmJ,EAAAtd,KAAA8X,OAAA,EAAA,GAzBAgG,GAsDA,WAEA,IAAAR,IAAA/L,EAAA4C,SAAA5C,EAAAC,cACA,OAAA8L,EAEA,IAAA,IAAA7iB,EAAA,EAAAA,EAAA6iB,EAAAtd,KAAA5E,OAAAX,IACA,CACA,IAEA2F,EAFA6B,EAAAsP,EAAA4C,OAAA,GAAA,GAGA,IAAA/T,EAAA,EAAAA,EAAAkd,EAAAtd,KAAAvF,GAAAW,OAAAgF,IACA,CACA,IAAA2d,EAAA3d,EACA3E,EAAA6hB,EAAAtd,KAAAvF,GAAA2F,GAEAmR,EAAA4C,SACA4J,EAAA3d,GAAAid,EAAAjiB,OAAA,iBAAAiiB,EAAAjd,IAEA3E,EAAAuiB,EAAAD,EAAAtiB,GAEA,mBAAAsiB,GAEA9b,EAAA8b,GAAA9b,EAAA8b,IAAA,GACA9b,EAAA8b,GAAAzf,KAAA7C,IAGAwG,EAAA8b,GAAAtiB,EAGA6hB,EAAAtd,KAAAvF,GAAAwH,EAEAsP,EAAA4C,SAEA/T,EAAAid,EAAAjiB,OACAsiB,EAAA,gBAAA,gBAAA,6BAAAL,EAAAjiB,OAAA,sBAAAgF,EAAA3F,GACA2F,EAAAid,EAAAjiB,QACAsiB,EAAA,gBAAA,eAAA,4BAAAL,EAAAjiB,OAAA,sBAAAgF,EAAA3F,IAIA8W,EAAA4C,QAAAmJ,EAAA7I,OACA6I,EAAA7I,KAAA1U,OAAAsd,GACA,OAAAC,EA9FAW,GAGA,SAAAV,IAEA,OAAAhM,EAAA4C,QAAA,IAAAkJ,EAAAjiB,OA6BA,SAAA4iB,EAAAD,EAAAtiB,GAEA,OAVAsiB,EAUAA,EARAxM,EAAAG,4BAAAyH,IAAA5H,EAAAC,cAAAuM,KACAxM,EAAAC,cAAAuM,GAAAxM,EAAAG,sBAAAqM,KAEA,KAAAxM,EAAAC,cAAAuM,IAAAxM,EAAAC,eAOA,SAAA/V,GAAA,SAAAA,GAEA,UAAAA,GAAA,UAAAA,IAEAwhB,EAAAhM,KAAAxV,GACAyiB,WAAAziB,GAGA,KAAAA,EAAA,KAAAA,GAGAA,EAvBA,IAAAsiB,EAuJA,SAAAL,EAAAhW,EAAA1M,EAAAmjB,EAAAlc,GAEAqb,EAAA5E,OAAApa,KAAA,CACAoJ,KAAAA,EACA1M,KAAAA,EACAqN,QAAA8V,EACAlc,IAAAA,IA7QA7F,KAAAkM,MAAA,SAAAqK,EAAAyL,EAAAC,GAMA,GAJA9M,EAAA0C,UACA1C,EAAA0C,QA6OA,SAAAtB,GAIA,IAAAvY,GAFAuY,EAAAA,EAAAsI,OAAA,EAAA,UAEAjR,MAAA,MAEA1P,EAAAqY,EAAA3I,MAAA,MAEAsU,EAAA,EAAAhkB,EAAAc,QAAAd,EAAA,GAAAc,OAAAhB,EAAA,GAAAgB,OAEA,GAAA,IAAAhB,EAAAgB,QAAAkjB,EACA,MAAA,KAGA,IADA,IAAAC,EAAA,EACA9jB,EAAA,EAAAA,EAAAL,EAAAgB,OAAAX,IAEA,OAAAL,EAAAK,GAAA,IACA8jB,IAGA,OAAAA,GAAAnkB,EAAAgB,OAAA,EAAA,OAAA,KAjQAojB,CAAA7L,IAEAqK,GAAA,EACAzL,EAAAuC,UAYArC,EAAAF,EAAAuC,aAEAvC,EAAAuC,UAAAvC,EAAAuC,UAAAnB,GACA2K,EAAA7I,KAAAX,UAAAvC,EAAAuC,eAdA,CACA,IAAA2K,EA+KA,SAAA9L,EAAAsB,EAAA0J,GAKA,IAHA,IACAe,EAAAC,EAAAC,EADAC,EAAA,CAAA,IAAA,KAAA,IAAA,IAAApgB,EAAAiX,WAAAjX,EAAAoX,UAGApb,EAAA,EAAAA,EAAAokB,EAAAzjB,OAAAX,IACA,CACA,IAAAqkB,EAAAD,EAAApkB,GACAskB,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAL,OAAAzF,EAQA,IANA,IAAAO,EAAA,IAAAxD,EAAA,CACApC,UAAAgL,EACA7K,QAAAA,EACAyF,QAAA,KACApR,MAAAqK,GAEAvS,EAAA,EAAAA,EAAAsZ,EAAA1Z,KAAA5E,OAAAgF,IAEA,GAAAud,GAAA,IAAAjE,EAAA1Z,KAAAI,GAAAhF,QAAA,IAAAse,EAAA1Z,KAAAI,GAAA,GAAAhF,OACA6jB,QADA,CAIA,IAAAC,EAAAxF,EAAA1Z,KAAAI,GAAAhF,OACA4jB,GAAAE,OAEA,IAAAN,EAKA,EAAAM,IAEAH,GAAA7d,KAAAuK,IAAAyT,EAAAN,GACAA,EAAAM,GANAN,EAAAM,EAUA,EAAAxF,EAAA1Z,KAAA5E,SACA4jB,GAAAtF,EAAA1Z,KAAA5E,OAAA6jB,SAEA,IAAAN,GAAAI,EAAAJ,IACA,KAAAK,IAEAL,EAAAI,EACAL,EAAAI,GAMA,MAAA,CACAK,cAHA5N,EAAAuC,UAAA4K,GAIAU,cAAAV,GApOAW,CAAA1M,EAAApB,EAAA0C,QAAA1C,EAAAoM,gBACAc,EAAAU,WACA5N,EAAAuC,UAAA2K,EAAAW,eAGApC,GAAA,EACAzL,EAAAuC,UAAArV,EAAAwX,kBAEAqH,EAAA7I,KAAAX,UAAAvC,EAAAuC,UAQA,IAAAwL,EAAA1G,EAAArH,GAQA,OAPAA,EAAAmI,SAAAnI,EAAA4C,QACAmL,EAAA5F,UAEApI,EAAAqB,EACAoK,EAAA,IAAA7G,EAAAoJ,GACAhC,EAAAP,EAAAzU,MAAAgJ,EAAA8M,EAAAC,GACAb,IACAL,EAAA,CAAA1I,KAAA,CAAA4E,QAAA,IAAAiE,GAAA,CAAA7I,KAAA,CAAA4E,QAAA,KAGAjd,KAAAid,OAAA,WAEA,OAAA8D,GAGA/gB,KAAAigB,MAAA,WAEAc,GAAA,EACAJ,EAAAU,QACAnM,EAAAA,EAAA2J,OAAA8B,EAAAwC,iBAGAnjB,KAAAmgB,OAAA,WAEAY,GAAA,EACAtM,EAAAiC,SAAAiG,WAAAzH,GAAA,IAGAlV,KAAAkd,QAAA,WAEA,OAAA8D,GAGAhhB,KAAAqhB,MAAA,WAEAL,GAAA,EACAL,EAAAU,QACAH,EAAA7I,KAAA6E,SAAA,EACA7H,EAAAF,EAAAkB,WACAlB,EAAAkB,SAAA6K,GACAhM,EAAA,IAsNA,SAAA4E,EAAAtD,GAIA,IAMAsB,EANA4K,GADAlM,EAAAA,GAAA,IACAkB,UACAG,EAAArB,EAAAqB,QACAuL,EAAA5M,EAAA4M,SACA3iB,EAAA+V,EAAA/V,KACA6c,EAAA9G,EAAA8G,QACA+F,EAAA7M,EAAA6M,SAQAC,EAJAxL,OADAiF,IAAAvG,EAAAsB,UACA,IAEAtB,EAAAsB,UAaA,QAVAiF,IAAAvG,EAAA8M,aACAA,EAAA9M,EAAA8M,aAIA,iBAAAZ,IACA,EAAArgB,EAAAsV,eAAA/B,QAAA8M,MACAA,EAAA,KAGAU,IAAAV,EACA,KAAA,uCACA,IAAAU,EACAA,EAAA,KACA,iBAAAA,IACA,EAAA/gB,EAAAsV,eAAA/B,QAAAwN,MACAA,GAAA,GAGA,OAAAvL,GAAA,OAAAA,GAAA,SAAAA,IACAA,EAAA,MAGA,IAAAuF,EAAA,EACAF,GAAA,EAEAld,KAAAkM,MAAA,SAAAqK,EAAAyL,EAAAC,GAGA,GAAA,iBAAA1L,EACA,KAAA,yBAIA,IAAAgN,EAAAhN,EAAAvX,OACAwkB,EAAAd,EAAA1jB,OACAykB,EAAA5L,EAAA7Y,OACA0kB,EAAAN,EAAApkB,OACA2kB,EAAAtO,EAAA5U,GAIAmD,EAAA,GAAA0Y,EAAA,GAAAzW,EAAA,GAAA+d,EADAxG,EAAA,EAGA,IAAA7G,EACA,OAAAsN,IAEA,GAAAR,IAAA,IAAAA,IAAA,IAAA9M,EAAAX,QAAAkC,GACA,CAEA,IADA,IAAAgM,EAAAvN,EAAA3I,MAAAiK,GACAxZ,EAAA,EAAAA,EAAAylB,EAAA9kB,OAAAX,IACA,CAGA,GAFAwH,EAAAie,EAAAzlB,GACA+e,GAAAvX,EAAA7G,OACAX,IAAAylB,EAAA9kB,OAAA,EACAoe,GAAAvF,EAAA7Y,YACA,GAAAijB,EACA,OAAA4B,IACA,IAAAT,GAAAvd,EAAAgZ,OAAA,EAAA6E,KAAAN,EAAA,CAEA,GAAAO,GAKA,GAHA/f,EAAA,GACAmgB,EAAAle,EAAA+H,MAAA8U,IACAsB,IACA9G,EACA,OAAA2G,SAGAE,EAAAle,EAAA+H,MAAA8U,IACA,GAAApF,GAAAA,GAAAjf,EAGA,OADAuF,EAAAA,EAAA8P,MAAA,EAAA4J,GACAuG,GAAA,IAGA,OAAAA,IASA,IANA,IAGAI,EAHAC,EAAA3N,EAAAX,QAAA8M,EAAAtF,GACA+G,EAAA5N,EAAAX,QAAAiC,EAAAuF,GACAnF,EAAA,IAAAC,OAAAoL,EAAArK,QAAA,wBAAA,QAAAnB,EAAA,OAOA,GAAAvB,EAAA6G,KAAAtF,EAuGA,GAAAsL,GAAA,IAAAvd,EAAA7G,QAAAuX,EAAAsI,OAAAzB,EAAAsG,KAAAN,EAAA,CAEA,IAAA,IAAAe,EACA,OAAAN,IACAzG,EAAA+G,EAAAV,EACAU,EAAA5N,EAAAX,QAAAiC,EAAAuF,GACA8G,EAAA3N,EAAAX,QAAA8M,EAAAtF,QAKA,IAAA,IAAA8G,IAAAA,EAAAC,IAAA,IAAAA,GAEAte,EAAA3D,KAAAqU,EAAA9L,UAAA2S,EAAA8G,IACA9G,EAAA8G,EAAAV,EACAU,EAAA3N,EAAAX,QAAA8M,EAAAtF,OAJA,CASA,IAAA,IAAA+G,EAkBA,MAbA,GAHAte,EAAA3D,KAAAqU,EAAA9L,UAAA2S,EAAA+G,IACAC,EAAAD,EAAAV,GAEAE,IAEAK,IACA9G,GACA,OAAA2G,IAGA,GAAAvG,GAAA1Z,EAAA5E,QAAAse,EACA,OAAAuG,GAAA,QAhIA,IALAI,EAAA7G,EAGAA,MAGA,CAKA,IAAA,KAHA6G,EAAA1N,EAAAX,QAAAkC,EAAAmM,EAAA,IAeA,OAVAhC,GAEA3F,EAAApa,KAAA,CACAoJ,KAAA,SACA1M,KAAA,gBACAqN,QAAA,4BACApG,IAAAjC,EAAA5E,OACAqlB,MAAAjH,IAGAkH,IAIA,GAAAL,IAAAV,EAAA,EAGA,OAAAe,EADA/N,EAAA9L,UAAA2S,EAAA6G,GAAAhL,QAAAhB,EAAAH,IAMA,GAAAA,IAAAwL,GAAA/M,EAAA0N,EAAA,KAAAX,GAOA,GAAAxL,IAAAwL,GAAA,IAAAW,GAAA1N,EAAA0N,EAAA,KAAAX,EAAA,CAKA,IAAAiB,EAAAC,EAAAN,GAGA,GAAA3N,EAAA0N,EAAA,EAAAM,KAAA7B,EACA,CACA7c,EAAA3D,KAAAqU,EAAA9L,UAAA2S,EAAA6G,GAAAhL,QAAAhB,EAAAH,IACAsF,EAAA6G,EAAA,EAAAM,EAAAf,EACAU,EAAA3N,EAAAX,QAAA8M,EAAAtF,GACA+G,EAAA5N,EAAAX,QAAAiC,EAAAuF,GACA,MAGA,IAAAqH,EAAAD,EAAAL,GAGA,GAAA5N,EAAAsI,OAAAoF,EAAA,EAAAQ,EAAAhB,KAAA5L,EACA,CAKA,GAJAhS,EAAA3D,KAAAqU,EAAA9L,UAAA2S,EAAA6G,GAAAhL,QAAAhB,EAAAH,IACAsM,EAAAH,EAAA,EAAAQ,EAAAhB,GACAS,EAAA3N,EAAAX,QAAA8M,EAAAtF,GAEAuG,IAEAK,IACA9G,GACA,OAAA2G,IAGA,GAAAvG,GAAA1Z,EAAA5E,QAAAse,EACA,OAAAuG,GAAA,GAEA,MAKAvH,EAAApa,KAAA,CACAoJ,KAAA,SACA1M,KAAA,gBACAqN,QAAA,8CACApG,IAAAjC,EAAA5E,OACAqlB,MAAAjH,IAGA6G,UAtDAA,IAyGA,OAAAK,IAGA,SAAAP,EAAAle,GAEAjC,EAAA1B,KAAA2D,GACA+d,EAAAxG,EAOA,SAAAoH,EAAAH,GACA,IAAAK,EAAA,EACA,IAAA,IAAAL,EAAA,CACA,IAAAM,EAAApO,EAAA9L,UAAAwZ,EAAA,EAAAI,GACAM,GAAA,KAAAA,EAAAlD,SACAiD,EAAAC,EAAA3lB,QAGA,OAAA0lB,EAOA,SAAAJ,EAAAjlB,GAEA,OAAA4iB,SAEA,IAAA5iB,IACAA,EAAAkX,EAAAsI,OAAAzB,IACAvX,EAAA3D,KAAA7C,GACA+d,EAAAmG,EACAQ,EAAAle,GACA8d,GACAK,KAPAH,IAiBA,SAAAO,EAAAQ,GAEAxH,EAAAwH,EACAb,EAAAle,GACAA,EAAA,GACAse,EAAA5N,EAAAX,QAAAiC,EAAAuF,GAIA,SAAAyG,EAAAgB,GAEA,MAAA,CACAjhB,KAAAA,EACA0Y,OAAAA,EACAjE,KAAA,CACAX,UAAAgL,EACAoC,UAAAjN,EACAqF,QAAAA,EACA6H,YAAAF,EACAzH,OAAAwG,GAAA5B,GAAA,KAMA,SAAAgC,IAEAvjB,EAAAojB,KACAjgB,EAAA,GACA0Y,EAAA,KAKAtc,KAAAqhB,MAAA,WAEAnE,GAAA,GAIAld,KAAAmjB,aAAA,WAEA,OAAA/F,GAiCA,SAAAtH,EAAA7X,GAEA,IAAA8jB,EAAA9jB,EAAA2F,KACA2R,EAAAP,EAAA+M,EAAAtL,UACAyG,GAAA,EAEA,GAAA6E,EAAA7T,MACAqH,EAAAe,UAAAyL,EAAA7T,MAAA6T,EAAAlH,WACA,GAAAkH,EAAAtG,SAAAsG,EAAAtG,QAAA7X,KACA,CACA,IAKAohB,EAAA,CACA3D,MANA,WACAnE,GAAA,EACA+H,EAAAlD,EAAAtL,SAAA,CAAA7S,KAAA,GAAA0Y,OAAA,GAAAjE,KAAA,CAAA6E,SAAA,MAKA+C,MAAAiF,EACA/E,OAAA+E,GAGA,GAAA7P,EAAAE,EAAAU,UACA,CACA,IAAA,IAAA5X,EAAA,EAAAA,EAAA0jB,EAAAtG,QAAA7X,KAAA5E,SAEAuW,EAAAU,SAAA,CACArS,KAAA,CAAAme,EAAAtG,QAAA7X,KAAAvF,IACAie,OAAAyF,EAAAtG,QAAAa,OACAjE,KAAA0J,EAAAtG,QAAApD,MACA2M,IACA9H,GAPA7e,YAUA0jB,EAAAtG,aAEApG,EAAAE,EAAAW,aAEAX,EAAAW,UAAA6L,EAAAtG,QAAAuJ,EAAAjD,EAAAlH,aACAkH,EAAAtG,SAIAsG,EAAAvE,WAAAN,GACA+H,EAAAlD,EAAAtL,SAAAsL,EAAAtG,SAGA,SAAAwJ,EAAAxO,EAAAgF,GACA,IAAAlG,EAAAP,EAAAyB,GACApB,EAAAE,EAAAa,eACAb,EAAAa,aAAAqF,GACAlG,EAAA4P,mBACAnQ,EAAAyB,GAGA,SAAAyO,IACA,KAAA,mBAgCA,SAAA1I,EAAAlE,GAEA,GAAA,iBAAAA,EACA,OAAAA,EACA,IAAA8M,EAAA9M,aAAA3O,MAAA,GAAA,GACA,IAAA,IAAA6O,KAAAF,EACA8M,EAAA5M,GAAAgE,EAAAlE,EAAAE,IACA,OAAA4M,EAGA,SAAAnH,EAAA3f,EAAAmW,GAEA,OAAA,WAAAnW,EAAAyC,MAAA0T,EAAAyL,YAGA,SAAA7K,EAAAgQ,GAEA,MAAA,mBAAAA,EAGA,OA38CAzQ,EAEAJ,EAAAxI,UAy5CA,SAAA/N,GAEA,IAAA8jB,EAAA9jB,EAAA2F,UAEA,IAAAvB,EAAAkb,WAAAwE,IACA1f,EAAAkb,UAAAwE,EAAAtL,UAEA,GAAA,iBAAAsL,EAAAxL,MAEA/B,EAAAG,YAAA,CACA8B,SAAApU,EAAAkb,UACA9B,QAAApZ,EAAA6J,MAAA6V,EAAAxL,MAAAwL,EAAAvL,QACAgH,UAAA,SAGA,GAAAhJ,EAAA0C,MAAA6K,EAAAxL,iBAAAW,MAAA6K,EAAAxL,iBAAApX,OACA,CACA,IAAAsc,EAAApZ,EAAA6J,MAAA6V,EAAAxL,MAAAwL,EAAAvL,QACAiF,GACAjH,EAAAG,YAAA,CACA8B,SAAApU,EAAAkb,UACA9B,QAAAA,EACA+B,UAAA,MA76CAnb,EAAAmT,oBAo0CAjB,EAAAhV,SAAA+lB,qBAAA,UAl0CAhR,EAm0CAC,EAAAvV,OAAAuV,EAAAA,EAAAvV,OAAA,GAAAumB,IAAA,GAh0CAhmB,SAAA0B,KAOA1B,SAAAC,iBAAA,mBAAA,WACAuV,GAAA,IACA,GANAA,GAAA,IAsdA6B,EAAA/S,UAAA1E,OAAA8K,OAAA0R,EAAA9X,YACAmG,YAAA4M,GAkEAO,EAAAtT,UAAA1E,OAAA8K,OAAA0R,EAAA9X,YACAmG,YAAAmN,GAwBAN,EAAAhT,UAAA1E,OAAA8K,OAAA4M,EAAAhT,YACAmG,YAAA6M,GA6FAI,EAAApT,UAAA1E,OAAA8K,OAAA0R,EAAA9X,YACAmG,YAAAiN,EA8yBA5U,GA3mDA,mBAAAmjB,QAAAA,OAAAC,IAGAD,OAAA,GAAAnR,GAEA,iBAAAnV,QAAA,IAAAJ,EAKAI,EAAAJ,QAAAuV,IAKAD,EAAA/R,KAAAgS","file":"app-flyweb-client.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Game = require(\"./game\");\ndocument.addEventListener('DOMContentLoaded', function () {\n    var modeDOM = document.querySelector('.mode');\n    if (modeDOM) {\n        modeDOM.classList.add('hidden');\n    }\n    Game.initGameFlyweb({ clientMode: true });\n});\n\n//# sourceMappingURL=app-flyweb-client.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar Papa = require(\"papaparse\");\nvar BoardPiece;\n(function (BoardPiece) {\n    BoardPiece[BoardPiece[\"EMPTY\"] = 0] = \"EMPTY\";\n    BoardPiece[BoardPiece[\"PLAYER_1\"] = 1] = \"PLAYER_1\";\n    BoardPiece[BoardPiece[\"PLAYER_2\"] = 2] = \"PLAYER_2\";\n    BoardPiece[BoardPiece[\"DRAW\"] = 3] = \"DRAW\";\n})(BoardPiece = exports.BoardPiece || (exports.BoardPiece = {}));\nvar Record = (function () {\n    function Record(winner, moves) {\n        this.winner = winner;\n        this.moves = moves;\n    }\n    return Record;\n}());\nexports.Record = Record;\nvar Board = (function () {\n    function Board(canvas) {\n        this.gameRecord = [];\n        this.csvData = [];\n        this.starter = -1;\n        this.turnOne = true;\n        this.turnTwo = true;\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.getBoardScale();\n        this.initConstants();\n        this.reset();\n        this.onresize();\n        console.log('making sure constructor is called once');\n        var moves = {};\n        moves.start = 0;\n        moves.winner = 0;\n        for (var i = 0; i < 42; i++) {\n            moves['move_' + (i + 1)] = [0, 0];\n        }\n        this.csvData.push(moves);\n        var data = [\n            ['Hello', 'World!'],\n            ['Line', 'two']\n        ];\n        console.log('----Unparsed: ', Papa.unparse(data));\n        var csv = Papa.unparse({\n            fields: [\"Column 1\", \"Column 2\"],\n            data: [\n                [\"foo\", \"bar\"],\n                [\"abc\", \"def\"]\n            ]\n        });\n        var breakpoint = 'here';\n        console.log('after csv parse');\n        console.log(csv);\n    }\n    Board.prototype.reset = function () {\n        this.map = [];\n        this.turnOne = true;\n        this.turnTwo = true;\n        for (var i = 0; i < Board.ROWS; i++) {\n            this.map.push([]);\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                this.map[i].push(BoardPiece.EMPTY);\n            }\n        }\n        this.winnerBoardPiece = BoardPiece.EMPTY;\n        this.gameMoveRecord = [];\n        utils_1.Utils.clearCanvas(this);\n    };\n    Board.prototype.getBoardScale = function () {\n        return window.innerWidth < 640 ? (Board.SCALE = 0.5) : (Board.SCALE = 1.0);\n    };\n    Board.prototype.initConstants = function () {\n        Board.CANVAS_HEIGHT = Board.SCALE * 480;\n        Board.CANVAS_WIDTH = Board.SCALE * 640;\n        Board.PIECE_RADIUS = Board.SCALE * 25;\n        Board.MASK_X_BEGIN =\n            Math.max(0, Board.CANVAS_WIDTH - (3 * Board.COLUMNS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MASK_Y_BEGIN =\n            Math.max(0, Board.CANVAS_HEIGHT - (3 * Board.ROWS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MESSAGE_WIDTH = Board.SCALE * 400;\n        Board.MESSAGE_X_BEGIN = (Board.CANVAS_WIDTH - Board.MESSAGE_WIDTH) / 2;\n        Board.MESSAGE_Y_BEGIN = Board.SCALE * 20;\n        this.canvas.width = Board.CANVAS_WIDTH;\n        this.canvas.height = Board.CANVAS_HEIGHT;\n    };\n    Board.prototype.onresize = function () {\n        var _this = this;\n        var prevBoardScale = Board.SCALE;\n        utils_1.Utils.onresize().add(function () {\n            _this.getBoardScale();\n            if (prevBoardScale !== Board.SCALE) {\n                prevBoardScale = Board.SCALE;\n                _this.initConstants();\n                utils_1.Utils.clearCanvas(_this);\n                _this.render();\n            }\n        });\n    };\n    Board.prototype.applyPlayerAction = function (player, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isColumnEverFilled, row, i, moveR;\n            return __generator(this, function (_a) {\n                if (this.map[0][column] !== BoardPiece.EMPTY ||\n                    column < 0 ||\n                    column >= Board.COLUMNS) {\n                    return [2, false];\n                }\n                isColumnEverFilled = false;\n                row = 0;\n                for (i = 0; i < Board.ROWS - 1; i++) {\n                    if (this.map[i + 1][column] !== BoardPiece.EMPTY) {\n                        isColumnEverFilled = true;\n                        row = i;\n                        break;\n                    }\n                }\n                if (!isColumnEverFilled) {\n                    row = Board.ROWS - 1;\n                }\n                this.map[row][column] = player.boardPiece;\n                this.debug();\n                moveR = [row, column];\n                this.gameMoveRecord.push(moveR);\n                this.render();\n                return [2, true];\n            });\n        });\n    };\n    Board.prototype.debug = function () {\n    };\n    Board.prototype.gameDone = function (winner) {\n        var done = new Record(winner, this.gameMoveRecord);\n        var moves = {};\n        moves.start = this.starter;\n        moves.winner = winner;\n        for (var i = 0; i < this.gameMoveRecord.length; i++) {\n            moves['move_' + (i + 1)] = this.gameMoveRecord[i];\n        }\n        this.csvData.push(moves);\n        console.log('winner winner chicken dinner: ' + winner);\n        console.log(this.gameMoveRecord);\n        this.gameRecord.push(done);\n        if (this.gameRecord.length == 1000) {\n            var workingCSV = Papa.unparse({\n                fields: [\"Column 1\", \"Column 2\"],\n                data: [\n                    [\"foo\", \"bar\"],\n                    [\"abc\", \"def\"]\n                ]\n            });\n            console.log('after the orginla one');\n            console.log(workingCSV);\n            var csv = Papa.unparse(this.csvData);\n            console.log('after real csv parse');\n            console.log(csv);\n            var element = document.createElement('a');\n            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csv));\n            element.setAttribute('download', 'datasetfive.csv');\n            element.style.display = 'none';\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n            var breakItHere = 'down';\n        }\n    };\n    Board.prototype.getWinner = function () {\n        var _this = this;\n        if (this.winnerBoardPiece !== BoardPiece.EMPTY) {\n            return this.winnerBoardPiece;\n        }\n        var direction = [\n            [0, -1],\n            [0, 1],\n            [-1, -1],\n            [-1, 0],\n            [-1, 1],\n            [1, -1],\n            [1, 0],\n            [1, 1]\n        ];\n        var isWinningSequence = function (i, j, playerPiece, dir, count) {\n            if (count >= 4) {\n                return true;\n            }\n            if (i < 0 ||\n                j < 0 ||\n                i >= Board.ROWS ||\n                j >= Board.COLUMNS ||\n                _this.map[i][j] !== playerPiece) {\n                return false;\n            }\n            return isWinningSequence(i + dir[0], j + dir[1], playerPiece, dir, count + 1);\n        };\n        var countEmpty = 0;\n        for (var i = 0; i < Board.ROWS; i++) {\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                var playerPiece = this.map[i][j];\n                if (playerPiece !== BoardPiece.EMPTY) {\n                    for (var k = 0; k < direction.length; k++) {\n                        var isWon = isWinningSequence(i + direction[k][0], j + direction[k][1], playerPiece, direction[k], 1);\n                        if (isWon) {\n                            return (this.winnerBoardPiece = playerPiece);\n                        }\n                    }\n                }\n                else {\n                    countEmpty++;\n                }\n            }\n        }\n        if (countEmpty === 0) {\n            return (this.winnerBoardPiece = BoardPiece.DRAW);\n        }\n        return BoardPiece.EMPTY;\n    };\n    Board.prototype.announceWinner = function () {\n        this.canvas.click();\n    };\n    Board.prototype.getPlayerColor = function (boardPiece) {\n        switch (boardPiece) {\n            case BoardPiece.PLAYER_1:\n                return Board.PLAYER_1_COLOR;\n            case BoardPiece.PLAYER_2:\n                return Board.PLAYER_2_COLOR;\n            default:\n                return 'transparent';\n        }\n    };\n    Board.prototype.animateAction = function (newRow, column, boardPiece) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var fillStyle, currentY, doAnimation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fillStyle = this.getPlayerColor(boardPiece);\n                        currentY = 0;\n                        doAnimation = function () { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                utils_1.Utils.clearCanvas(this);\n                                utils_1.Utils.drawCircle(this.context, {\n                                    x: 3 * Board.PIECE_RADIUS * column +\n                                        Board.MASK_X_BEGIN +\n                                        2 * Board.PIECE_RADIUS,\n                                    y: currentY + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    r: Board.PIECE_RADIUS,\n                                    fillStyle: fillStyle,\n                                    strokeStyle: Board.PIECE_STROKE_STYLE\n                                });\n                                this.render();\n                                currentY += Board.PIECE_RADIUS;\n                                return [2];\n                            });\n                        }); };\n                        _a.label = 1;\n                    case 1:\n                        if (!(newRow * 3 * Board.PIECE_RADIUS >= currentY)) return [3, 3];\n                        return [4, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        doAnimation();\n                        return [3, 1];\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    Board.prototype.render = function () {\n        utils_1.Utils.drawMask(this);\n        for (var y = 0; y < Board.ROWS; y++) {\n            for (var x = 0; x < Board.COLUMNS; x++) {\n                utils_1.Utils.drawCircle(this.context, {\n                    x: 3 * Board.PIECE_RADIUS * x +\n                        Board.MASK_X_BEGIN +\n                        2 * Board.PIECE_RADIUS,\n                    y: 3 * Board.PIECE_RADIUS * y +\n                        Board.MASK_Y_BEGIN +\n                        2 * Board.PIECE_RADIUS,\n                    r: Board.PIECE_RADIUS,\n                    fillStyle: this.getPlayerColor(this.map[y][x]),\n                    strokeStyle: Board.PIECE_STROKE_STYLE\n                });\n            }\n        }\n    };\n    Board.ROWS = 6;\n    Board.COLUMNS = 7;\n    Board.PLAYER_1_COLOR = '#ef453b';\n    Board.PLAYER_2_COLOR = '#0059ff';\n    Board.PIECE_STROKE_STYLE = 'black';\n    Board.MASK_COLOR = '#d8d8d8';\n    return Board;\n}());\nexports.Board = Board;\n\n//# sourceMappingURL=board.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar GameBase = (function () {\n    function GameBase(players, canvas) {\n        this.gamesWon = [];\n        this.board = new board_1.Board(canvas);\n        this.players = players;\n        this.currentPlayerId = 0;\n        this.reset();\n    }\n    GameBase.prototype.reset = function () {\n        this.isMoveAllowed = false;\n        this.isGameWon = false;\n        this.board.reset();\n        this.board.render();\n        this.board.debug();\n    };\n    GameBase.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var winner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.isMoveAllowed = true;\n                        _a.label = 1;\n                    case 1:\n                        if (!!this.isGameWon) return [3, 3];\n                        return [4, this.move()];\n                    case 2:\n                        _a.sent();\n                        winner = this.board.getWinner();\n                        if (winner !== board_1.BoardPiece.EMPTY) {\n                            console.log('Game over: winner is player ', winner);\n                            this.board.gameDone(winner);\n                            console.log(this.board.gameRecord);\n                            this.isGameWon = true;\n                            this.isMoveAllowed = false;\n                            this.board.announceWinner();\n                            return [3, 3];\n                        }\n                        return [3, 1];\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    GameBase.prototype.move = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentPlayer, actionSuccesful, action;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isMoveAllowed) {\n                            return [2];\n                        }\n                        currentPlayer = this.players[this.currentPlayerId];\n                        actionSuccesful = false;\n                        _a.label = 1;\n                    case 1:\n                        if (!!actionSuccesful) return [3, 4];\n                        return [4, currentPlayer.getAction(this.board)];\n                    case 2:\n                        action = _a.sent();\n                        this.isMoveAllowed = false;\n                        return [4, this.board.applyPlayerAction(currentPlayer, action)];\n                    case 3:\n                        actionSuccesful = _a.sent();\n                        this.isMoveAllowed = true;\n                        if (!actionSuccesful) {\n                            console.log('Move not allowed! Try again.');\n                        }\n                        else {\n                            this.afterMove(action);\n                        }\n                        return [3, 1];\n                    case 4:\n                        this.currentPlayerId = this.getNextPlayer();\n                        return [2];\n                }\n            });\n        });\n    };\n    GameBase.prototype.afterMove = function (action) {\n    };\n    GameBase.prototype.getNextPlayer = function () {\n        return this.currentPlayerId === 0 ? 1 : 0;\n    };\n    return GameBase;\n}());\nexports.GameBase = GameBase;\n\n//# sourceMappingURL=game-base.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar GameFlyweb = (function (_super) {\n    __extends(GameFlyweb, _super);\n    function GameFlyweb(players, canvas, clientMode) {\n        if (clientMode === void 0) { clientMode = false; }\n        var _this = _super.call(this, players, canvas) || this;\n        _this.BASE_URL = window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/'));\n        _this.browser = navigator;\n        _this.isAcceptingPlayer = true;\n        _this.clientMode = clientMode;\n        if (clientMode) {\n            _this.playerSlave = players[0];\n            _this.playerMaster = players[1];\n            _this.initClient();\n        }\n        else {\n            _this.playerMaster = players[0];\n            _this.playerSlave = players[1];\n            _this.initServer();\n        }\n        return _this;\n    }\n    GameFlyweb.prototype.afterMove = function (action) {\n        if ((this.clientMode && this.currentPlayerId === 1) ||\n            (!this.clientMode && this.currentPlayerId === 0)) {\n            this.playerMaster.socket.send(JSON.stringify({\n                type: 'move',\n                data: {\n                    column: action,\n                    from: this.currentPlayerId === 0 ? 'server' : 'client'\n                }\n            }));\n        }\n    };\n    GameFlyweb.prototype.initClient = function () {\n        this.handleClientWs();\n    };\n    GameFlyweb.prototype.handleClientWs = function () {\n        var _this = this;\n        var socket = new WebSocket('ws://' + window.location.host + '/api/ws');\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('client socket.onopen()', evt);\n        };\n        socket.onclose = function (evt) {\n            console.log('client socket.onclose()', evt);\n        };\n        socket.onerror = function (evt) {\n            console.log('client socket.onerror()', evt);\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('client socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2];\n                        }\n                        if (message.from === 'client') {\n                            return [2];\n                        }\n                        if (!(message.type === 'start')) return [3, 1];\n                        utils_1.Utils.showMessage('<h1>Welcome!</h1>Connection to Player 1 has been established. Game started!');\n                        this.start();\n                        return [3, 4];\n                    case 1:\n                        if (!(message.type === 'move')) return [3, 2];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3, 4];\n                    case 2:\n                        if (!(message.type === 'reset')) return [3, 4];\n                        this.reset();\n                        return [4, utils_1.Utils.animationFrame()];\n                    case 3:\n                        _a.sent();\n                        this.start();\n                        _a.label = 4;\n                    case 4: return [2];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.fetch = function (evt, url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, contentType, blob, headers;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, fetch(this.BASE_URL + url)];\n                    case 1:\n                        response = _a.sent();\n                        contentType = response.headers.get('Content-Type');\n                        return [4, response.blob()];\n                    case 2:\n                        blob = _a.sent();\n                        headers = {\n                            'Content-Type': contentType,\n                            'Cache-Control': 'no-cache, no-store, must-revalidate',\n                            Pragma: 'no-cache',\n                            Expires: 0\n                        };\n                        console.log('Response is: ', url);\n                        evt.respondWith(new Promise(function (r) { return r(new Response(blob, { headers: headers })); }));\n                        return [2];\n                }\n            });\n        });\n    };\n    GameFlyweb.prototype.handleWsServer = function (evt) {\n        var _this = this;\n        var socket = evt.accept();\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('server socket.onopen()', evt, socket);\n            if (_this.isAcceptingPlayer) {\n                _this.isAcceptingPlayer = false;\n                socket.send(JSON.stringify({\n                    type: 'start',\n                    data: {\n                        accepted: _this.isAcceptingPlayer\n                    }\n                }));\n                utils_1.Utils.showMessage('<h1>Welcome!</h1>Connection to Player 2 has been established. Game started!');\n                _this.start();\n            }\n            else {\n                socket.close();\n            }\n        };\n        socket.onclose = function (evt) {\n            console.log('server socket.onclose()', evt);\n            _this.isAcceptingPlayer = true;\n            _this.reset();\n        };\n        socket.onerror = function (evt) {\n            console.log('server socket.onerror()', evt);\n            _this.isAcceptingPlayer = true;\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('server socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2];\n                        }\n                        if (message.from === 'server') {\n                            return [2];\n                        }\n                        if (!(message.type === 'move')) return [3, 1];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3, 3];\n                    case 1:\n                        if (!(message.type === 'reset')) return [3, 3];\n                        this.reset();\n                        return [4, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.start();\n                        _a.label = 3;\n                    case 3: return [2];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.initServer = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var server;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!('publishServer' in this.browser)) {\n                            utils_1.Utils.showMessage(\"<h1>Attention!</h1>\\n        FlyWeb requires Firefox Developer Edition or Nightly,\\n        and enabling \\\"dom.flyweb.enabled\\\" flag at about:config\");\n                            return [2, false];\n                        }\n                        return [4, this.browser.publishServer('c4 - Connect Four')];\n                    case 1:\n                        server = _a.sent();\n                        server.onfetch = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n                            var urlParts, url, params, _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        urlParts = evt.request.url.split('?');\n                                        url = urlParts[0];\n                                        params = new URLSearchParams(urlParts[1]);\n                                        console.log('me Requested for url: ', url, params);\n                                        _a = url;\n                                        switch (_a) {\n                                            case '/dist/app.js': return [3, 1];\n                                        }\n                                        return [3, 3];\n                                    case 1: return [4, this.fetch(evt, '/dist/app-flyweb-client.js')];\n                                    case 2:\n                                        _b.sent();\n                                        return [3, 5];\n                                    case 3: return [4, this.fetch(evt, url)];\n                                    case 4:\n                                        _b.sent();\n                                        _b.label = 5;\n                                    case 5: return [2];\n                                }\n                            });\n                        }); };\n                        server.onwebsocket = function (evt) {\n                            var url = evt.request.url;\n                            if (url === '/api/ws') {\n                                _this.handleWsServer(evt);\n                            }\n                        };\n                        return [2];\n                }\n            });\n        });\n    };\n    return GameFlyweb;\n}(game_base_1.GameBase));\nfunction initGameFlyweb(_a) {\n    var _this = this;\n    var _b = _a.clientMode, clientMode = _b === void 0 ? false : _b;\n    var canvas = document.querySelector('canvas');\n    if (!canvas) {\n        console.error('Canvas DOM is null');\n        return;\n    }\n    var players = [];\n    if (clientMode) {\n        players = [\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    else {\n        players = [\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    var game = new GameFlyweb(players, canvas, clientMode);\n    utils_1.Utils.showMessage('<h1>Welcome!</h1>Game will start after Player 2 has been connected.');\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3, 2];\n                    game.reset();\n                    if (game.playerMaster && game.playerMaster.socket) {\n                        game.playerMaster.socket.send(JSON.stringify({\n                            type: 'reset',\n                            data: {\n                                reset: true\n                            }\n                        }));\n                    }\n                    return [4, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2];\n            }\n        });\n    }); });\n}\nexports.initGameFlyweb = initGameFlyweb;\n\n//# sourceMappingURL=game-flyweb.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocal2p = (function (_super) {\n    __extends(GameLocal2p, _super);\n    function GameLocal2p(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocal2p;\n}(game_base_1.GameBase));\nfunction initGameLocal2p() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    if (!canvas) {\n        console.error('Canvas DOM is null');\n        return;\n    }\n    var game = new GameLocal2p([\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3, 2];\n                    game.reset();\n                    return [4, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2];\n            }\n        });\n    }); });\n}\nexports.initGameLocal2p = initGameLocal2p;\n\n//# sourceMappingURL=game-local-2p.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocalAi = (function (_super) {\n    __extends(GameLocalAi, _super);\n    function GameLocalAi(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocalAi;\n}(game_base_1.GameBase));\nfunction initGameLocalAi() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    if (!canvas) {\n        console.error('Canvas DOM is null');\n        return;\n    }\n    var game = new GameLocalAi([\n        new player_1.PlayerAi(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerAi(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3, 2];\n                    console.log('----------------- wow');\n                    game.reset();\n                    return [4, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2];\n            }\n        });\n    }); });\n}\nexports.initGameLocalAi = initGameLocalAi;\n\n//# sourceMappingURL=game-local-ai.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./game-flyweb\"));\n__export(require(\"./game-local-2p\"));\n__export(require(\"./game-local-ai\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./player\"));\n__export(require(\"./player-ai\"));\n__export(require(\"./player-human\"));\n__export(require(\"./player-flyweb-master\"));\n__export(require(\"./player-flyweb-slave\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar PlayerAi = (function (_super) {\n    __extends(PlayerAi, _super);\n    function PlayerAi(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.ownBoardPieceValue = _this.getBoardPieceValue(boardPiece);\n        _this.enemyBoardPiece =\n            boardPiece === board_1.BoardPiece.PLAYER_1\n                ? board_1.BoardPiece.PLAYER_2\n                : board_1.BoardPiece.PLAYER_1;\n        return _this;\n    }\n    PlayerAi.prototype.getBoardPieceValue = function (boardPiece) {\n        return boardPiece === board_1.BoardPiece.EMPTY\n            ? 0\n            : boardPiece === this.boardPiece ? 1 : -1;\n    };\n    PlayerAi.prototype.getStateValue = function (state) {\n        var winnerBoardPiece = board_1.BoardPiece.EMPTY;\n        var chainValue = 0;\n        for (var i = 0; i < board_1.Board.ROWS; i++) {\n            for (var j = 0; j < board_1.Board.COLUMNS; j++) {\n                var tempRight = 0, tempBottom = 0, tempBottomRight = 0, tempTopRight = 0;\n                for (var k = 0; k <= 3; k++) {\n                    if (j + k < board_1.Board.COLUMNS) {\n                        tempRight += this.getBoardPieceValue(state[i][j + k]);\n                    }\n                    if (i + k < board_1.Board.ROWS) {\n                        tempBottom += this.getBoardPieceValue(state[i + k][j]);\n                    }\n                    if (i + k < board_1.Board.ROWS && j + k < board_1.Board.COLUMNS) {\n                        tempBottomRight += this.getBoardPieceValue(state[i + k][j + k]);\n                    }\n                    if (i - k >= 0 && j + k < 7) {\n                        tempTopRight += this.getBoardPieceValue(state[i - k][j + k]);\n                    }\n                }\n                chainValue += tempRight * tempRight * tempRight;\n                chainValue += tempBottom * tempBottom * tempBottom;\n                chainValue += tempBottomRight * tempBottomRight * tempBottomRight;\n                chainValue += tempTopRight * tempTopRight * tempTopRight;\n                if (Math.abs(tempRight) === 4) {\n                    winnerBoardPiece =\n                        tempRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottom) === 4) {\n                    winnerBoardPiece =\n                        tempBottom > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottomRight) === 4) {\n                    winnerBoardPiece =\n                        tempBottomRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempTopRight) === 4) {\n                    winnerBoardPiece =\n                        tempTopRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n            }\n        }\n        return {\n            winnerBoardPiece: winnerBoardPiece,\n            chain: chainValue\n        };\n    };\n    PlayerAi.prototype.transformValues = function (returnValue, winnerBoardPiece, depth) {\n        var isWon = winnerBoardPiece === this.boardPiece;\n        var isLost = winnerBoardPiece === this.enemyBoardPiece;\n        if (isWon) {\n            returnValue = utils_1.Utils.BIG_POSITIVE_NUMBER - 100;\n        }\n        else if (isLost) {\n            returnValue = utils_1.Utils.BIG_NEGATIVE_NUMBER + 100;\n        }\n        returnValue -= depth * depth;\n        return returnValue;\n    };\n    PlayerAi.prototype.getMove = function (state, depth, alpha, beta) {\n        var stateValue = this.getStateValue(state);\n        var isWon = stateValue.winnerBoardPiece === this.boardPiece;\n        var isLost = stateValue.winnerBoardPiece === this.enemyBoardPiece;\n        if (depth >= PlayerAi.MAX_DEPTH || isWon || isLost) {\n            return {\n                value: this.transformValues(stateValue.chain * this.ownBoardPieceValue, stateValue.winnerBoardPiece, depth),\n                move: -1\n            };\n        }\n        return depth % 2 === 0\n            ? this.minState(state, depth + 1, alpha, beta)\n            : this.maxState(state, depth + 1, alpha, beta);\n    };\n    PlayerAi.prototype.maxState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_NEGATIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.boardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue > value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value > beta) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                alpha = Math.max(alpha, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.minState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_POSITIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.enemyBoardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue < value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value < alpha) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                beta = Math.min(beta, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var state, action;\n            return __generator(this, function (_a) {\n                state = utils_1.Utils.clone(board.map);\n                action = this.maxState(state, 0, utils_1.Utils.BIG_NEGATIVE_NUMBER, utils_1.Utils.BIG_POSITIVE_NUMBER);\n                console.log(\"AI \" + this\n                    .boardPiece + \" choose STEVEN column \" + action.move + \" with \" + board.turnTwo + \" value of \" + action.value);\n                if (board.turnOne) {\n                    console.log('started the game: ' + this.boardPiece);\n                    board.starter = this.boardPiece;\n                }\n                if (board.turnTwo) {\n                    board.turnTwo = board.turnOne;\n                    board.turnOne = false;\n                    console.log('set turnOne to false');\n                    return [2, Math.floor(Math.random() * 7)];\n                }\n                else\n                    return [2, action.move];\n                return [2];\n            });\n        });\n    };\n    PlayerAi.MAX_DEPTH = 4;\n    return PlayerAi;\n}(player_1.Player));\nexports.PlayerAi = PlayerAi;\n\n//# sourceMappingURL=player-ai.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\".\");\nvar PlayerFlywebMaster = (function (_super) {\n    __extends(PlayerFlywebMaster, _super);\n    function PlayerFlywebMaster(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebMaster.prototype.doAction = function (column) {\n        _super.prototype.doAction.call(this, column);\n        if (!this.socket) {\n            throw Error('PlayerFlywebMaster need WebSocket object');\n        }\n    };\n    PlayerFlywebMaster.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2, new Promise(function (r) { return _this.clickPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerFlywebMaster;\n}(_1.PlayerHuman));\nexports.PlayerFlywebMaster = PlayerFlywebMaster;\n\n//# sourceMappingURL=player-flyweb-master.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar PlayerFlywebSlave = (function (_super) {\n    __extends(PlayerFlywebSlave, _super);\n    function PlayerFlywebSlave(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.actionPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebSlave.prototype.doAction = function (column) {\n        if (this.actionPromiseResolver) {\n            this.actionPromiseResolver(column);\n        }\n    };\n    PlayerFlywebSlave.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2, new Promise(function (r) { return (_this.actionPromiseResolver = r); })];\n            });\n        });\n    };\n    return PlayerFlywebSlave;\n}(player_1.Player));\nexports.PlayerFlywebSlave = PlayerFlywebSlave;\n\n//# sourceMappingURL=player-flyweb-slave.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar PlayerHuman = (function (_super) {\n    __extends(PlayerHuman, _super);\n    function PlayerHuman(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        canvas.addEventListener('click', function (evt) {\n            try {\n                _this.handleClick(evt);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        });\n        return _this;\n    }\n    PlayerHuman.prototype.doAction = function (column) {\n        if (this.clickPromiseResolver && 0 <= column && column < board_1.Board.COLUMNS) {\n            this.clickPromiseResolver(column);\n        }\n    };\n    PlayerHuman.prototype.handleClick = function (event) {\n        var rect = this.canvas.getBoundingClientRect();\n        var x = event.clientX - rect.left;\n        var y = event.clientY - rect.top;\n        var column = utils_1.Utils.getColumnFromCoord({ x: x, y: y });\n        this.doAction(column);\n    };\n    PlayerHuman.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2, new Promise(function (r) { return (_this.clickPromiseResolver = r); })];\n            });\n        });\n    };\n    return PlayerHuman;\n}(player_1.Player));\nexports.PlayerHuman = PlayerHuman;\n\n//# sourceMappingURL=player-human.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Player = (function () {\n    function Player(boardPiece, canvas) {\n        this.boardPiece = boardPiece;\n        this.canvas = canvas;\n    }\n    return Player;\n}());\nexports.Player = Player;\n\n//# sourceMappingURL=player.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"./board\");\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.showMessage = function (message) {\n        if (message === void 0) { message = ''; }\n        var messageDOM = document.querySelector('.message');\n        if (!messageDOM) {\n            console.error('Message DOM is null!');\n            return;\n        }\n        messageDOM.classList.remove('hidden');\n        var messageContentDOM = document.querySelector('.message-body-content');\n        if (!messageContentDOM) {\n            console.error('Message body content DOM is null!');\n            return;\n        }\n        messageContentDOM.innerHTML = message;\n        var messageDismissDOM = document.querySelector('.message-body-dismiss');\n        if (!messageDismissDOM) {\n            console.error('Message body dismiss DOM is null!');\n            return;\n        }\n        var dismissHandler = function () {\n            messageDOM.classList.add('invisible');\n            messageDOM.addEventListener('transitionend', function () {\n                messageDOM.classList.add('hidden');\n                messageDOM.classList.remove('invisible');\n            });\n            messageDismissDOM.removeEventListener('click', dismissHandler);\n        };\n        messageDismissDOM.addEventListener('click', dismissHandler);\n    };\n    Utils.drawCircle = function (context, _a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.r, r = _d === void 0 ? 0 : _d, _e = _a.fillStyle, fillStyle = _e === void 0 ? '' : _e, _f = _a.strokeStyle, strokeStyle = _f === void 0 ? '' : _f;\n        context.save();\n        context.fillStyle = fillStyle;\n        context.strokeStyle = strokeStyle;\n        context.beginPath();\n        context.arc(x, y, r, 0, 2 * Math.PI, false);\n        context.fill();\n        context.restore();\n    };\n    Utils.drawMask = function (board) {\n        var context = board.context;\n        context.save();\n        context.fillStyle = board_1.Board.MASK_COLOR;\n        context.beginPath();\n        var doubleRadius = 2 * board_1.Board.PIECE_RADIUS;\n        var tripleRadius = 3 * board_1.Board.PIECE_RADIUS;\n        for (var y = 0; y < board_1.Board.ROWS; y++) {\n            for (var x = 0; x < board_1.Board.COLUMNS; x++) {\n                context.arc(tripleRadius * x + board_1.Board.MASK_X_BEGIN + doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN + doubleRadius, board_1.Board.PIECE_RADIUS, 0, 2 * Math.PI);\n                context.rect(tripleRadius * x + board_1.Board.MASK_X_BEGIN + 2 * doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN, -2 * doubleRadius, 2 * doubleRadius);\n            }\n        }\n        context.fill();\n        context.restore();\n    };\n    Utils.clearCanvas = function (board) {\n        board.context.clearRect(0, 0, board.canvas.width, board.canvas.height);\n    };\n    Utils.isCoordOnColumn = function (coord, columnXBegin, radius) {\n        return ((coord.x - columnXBegin) * (coord.x - columnXBegin) <= radius * radius);\n    };\n    Utils.getColumnFromCoord = function (coord) {\n        for (var i = 0; i < board_1.Board.COLUMNS; i++) {\n            if (Utils.isCoordOnColumn(coord, 3 * board_1.Board.PIECE_RADIUS * i +\n                board_1.Board.MASK_X_BEGIN +\n                2 * board_1.Board.PIECE_RADIUS, board_1.Board.PIECE_RADIUS)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Utils.getRandomColumnNumber = function () {\n        return Math.floor(Math.random() * board_1.Board.COLUMNS);\n    };\n    Utils.choose = function (choice) {\n        return choice[Math.floor(Math.random() * choice.length)];\n    };\n    Utils.animationFrame = function () {\n        var resolve = null;\n        var promise = new Promise(function (r) { return (resolve = r); });\n        if (resolve) {\n            window.requestAnimationFrame(resolve);\n        }\n        return promise;\n    };\n    Utils.clone = function (array) {\n        var arr = [];\n        for (var i = 0; i < array.length; i++) {\n            arr[i] = array[i].slice();\n        }\n        return arr;\n    };\n    Utils.getMockPlayerAction = function (map, boardPiece, column) {\n        var clonedMap = Utils.clone(map);\n        if (clonedMap[0][column] !== board_1.BoardPiece.EMPTY ||\n            column < 0 ||\n            column >= board_1.Board.COLUMNS) {\n            return {\n                success: false,\n                map: clonedMap\n            };\n        }\n        var isColumnEverFilled = false;\n        var row = 0;\n        for (var i = 0; i < board_1.Board.ROWS - 1; i++) {\n            if (clonedMap[i + 1][column] !== board_1.BoardPiece.EMPTY) {\n                isColumnEverFilled = true;\n                row = i;\n                break;\n            }\n        }\n        if (!isColumnEverFilled) {\n            row = board_1.Board.ROWS - 1;\n        }\n        clonedMap[row][column] = boardPiece;\n        return {\n            success: true,\n            map: clonedMap\n        };\n    };\n    Utils.onresize = function () {\n        var callbacks = [], running = false;\n        function resize() {\n            if (!running) {\n                running = true;\n                if (window.requestAnimationFrame) {\n                    window.requestAnimationFrame(runCallbacks);\n                }\n                else {\n                    setTimeout(runCallbacks, 66);\n                }\n            }\n        }\n        function runCallbacks() {\n            callbacks.forEach(function (callback) {\n                callback();\n            });\n            running = false;\n        }\n        function addCallback(callback) {\n            if (callback) {\n                callbacks.push(callback);\n            }\n        }\n        return {\n            add: function (callback) {\n                if (!callbacks.length) {\n                    window.addEventListener('resize', resize);\n                }\n                addCallback(callback);\n            }\n        };\n    };\n    Utils.BIG_POSITIVE_NUMBER = Math.pow(10, 9) + 7;\n    Utils.BIG_NEGATIVE_NUMBER = -Utils.BIG_POSITIVE_NUMBER;\n    return Utils;\n}());\nexports.Utils = Utils;\n\n//# sourceMappingURL=utils.js.map\n","/*@license\n\tPapa Parse\n\tv4.4.0\n\thttps://github.com/mholt/PapaParse\n\tLicense: MIT\n*/\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n}(this, function()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = IS_WORKER && /(\\?|&)papaworker(=|&|$)/.test(global.location.search),\n\t\tLOADED_SYNC = false, AUTO_SCRIPT_PATH;\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.SCRIPT_PATH = null;\t// Must be set by your code if you use workers and this lib is loaded asynchronously\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\telse if (Papa.WORKERS_SUPPORTED)\n\t{\n\t\tAUTO_SCRIPT_PATH = getScriptPath();\n\n\t\t// Check if the script was loaded synchronously\n\t\tif (!document.body)\n\t\t{\n\t\t\t// Body doesn't exist yet, must be synchronous\n\t\t\tLOADED_SYNC = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\tLOADED_SYNC = true;\n\t\t\t}, true);\n\t\t}\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (typeof _input === 'string')\n\t\t{\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(_quoteChar, 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (_input instanceof Array)\n\t\t{\n\t\t\tif (!_input.length || _input[0] instanceof Array)\n\t\t\t\treturn serialize(null, _input);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(objectKeys(_input[0]), _input);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (_input.data instanceof Array)\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.data[0] instanceof Array\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: objectKeys(_input.data[0]);\n\n\t\t\t\tif (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || []);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow 'exception: Unable to serialize unrecognized input';\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n\t\t\t\t&& _config.delimiter.length === 1\n\t\t\t\t&& Papa.BAD_DELIMITERS.indexOf(_config.delimiter) === -1)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| _config.quotes instanceof Array)\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\t\t}\n\n\n\t\t/** Turns an object's keys into an array */\n\t\tfunction objectKeys(obj)\n\t\t{\n\t\t\tif (typeof obj !== 'object')\n\t\t\t\treturn [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in obj)\n\t\t\t\tkeys.push(key);\n\t\t\treturn keys;\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = fields instanceof Array && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(data[0] instanceof Array);\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t{\n\t\t\t\t\tif (col > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t}\n\n\t\t\t\tif (row < data.length - 1)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tstr = str.toString().replace(quoteCharRegex, _quoteChar + _quoteChar);\n\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n\t\t\t\t\t\t\t|| (_quotes instanceof Array && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(str, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| str.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| str.charAt(0) === ' '\n\t\t\t\t\t\t\t|| str.charAt(str.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + str + _quoteChar : str;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\treturn;\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\t\treturn;\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open('GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t\txhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t\telse\n\t\t\t\tthis._start += this._config.chunkSize;\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._finished = !this._config.chunkSize || this._start > getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk = size ? remaining.substr(0, size) : remaining;\n\t\t\tremaining = size ? remaining.substr(size) : '';\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar FLOAT = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\n\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = guessLineEndings(input);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\t\t\t_input = _input.substr(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\t_paused = false;\n\t\t\tself.streamer.parseChunk(_input, true);\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t\tif (_results.data[i].length === 1 && _results.data[i][0] === '')\n\t\t\t\t\t\t_results.data.splice(i--, 1);\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTyping();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\tfor (var j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar header = _results.data[i][j];\n\n\t\t\t\t\tif (_config.trimHeaders) {\n\t\t\t\t\t\theader = header.trim();\n\t\t\t\t\t}\n\n\t\t\t\t\t_fields.push(header);\n\t\t\t\t}\n\t\t\t_results.data.splice(0, 1);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if(FLOAT.test(value)) {\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTyping()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping))\n\t\t\t\treturn _results;\n\n\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = _results.data[i][j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\t\t\t\t_results.data[i] = row;\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines)\n\t\t{\n\t\t\tvar delimChoices = [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow;\n\n\t\t\tfor (var i = 0; i < delimChoices.length; i++)\n\t\t\t{\n\t\t\t\tvar delim = delimChoices[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (skipEmptyLines && preview.data[j].length === 1 && preview.data[j][0].length === 0) {\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta < bestDelta)\n\t\t\t\t\t&& avgFieldCount > 1.99)\n\t\t\t\t{\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction guessLineEndings(input)\n\t\t{\n\t\t\tinput = input.substr(0, 1024 * 1024);\t// max length 1 MB\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\t_results.errors.push({\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg,\n\t\t\t\trow: row\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n\t\tif (config.quoteChar === undefined) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow 'Comment character same as delimiter';\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow 'Input must be a string';\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substr(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeChar.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&') + quoteChar, 'g');\n\t\t\tvar quoteSearch;\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(nextDelim);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary steps + delimiter'\n\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substr(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\t// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code\n\t// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358\n\tfunction getScriptPath()\n\t{\n\t\tvar scripts = document.getElementsByTagName('script');\n\t\treturn scripts.length ? scripts[scripts.length - 1].src : '';\n\t}\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\t\tif (!LOADED_SYNC && Papa.SCRIPT_PATH === null)\n\t\t\tthrow new Error(\n\t\t\t\t'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +\n\t\t\t\t'You need to set Papa.SCRIPT_PATH manually.'\n\t\t\t);\n\t\tvar workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;\n\t\t// Append 'papaworker' to the search string to tell papaparse that this is our worker.\n\t\tworkerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: [msg.results.data[i]],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow 'Not implemented.';\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object')\n\t\t\treturn obj;\n\t\tvar cpy = obj instanceof Array ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n"]}